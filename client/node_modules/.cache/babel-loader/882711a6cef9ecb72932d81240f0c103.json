{"ast":null,"code":"var _jsxFileName = \"/Users/jake/workspace/token-builder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport BuildForm from './Components/BuildForm.jsx';\nimport DashboardCard from './Components/DashboardCard';\nimport { ethers } from 'ethers';\nimport { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [web3, setWeb3] = useState({});\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [inProgress, toggleInProgress] = useState(false);\n  useEffect(async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    setWeb3({\n      provider: provider,\n      signer: signer\n    });\n  }, []);\n\n  const handleSubmit = async (name, symbol, supply, decimals) => {\n    if (!inProgress) {\n      try {\n        toggleInProgress(true);\n        const address = await web3.signer.getAddress();\n\n        for (let i = 0; i < Number(decimals); i++) {\n          supply += \"0\";\n        }\n\n        const res = await axios.post(\"https://jake-rice-token-builder.herokuapp.com/\"\n        /*\"http://localhost:3001/\"*/\n        , {\n          address: address,\n          name: name\n        });\n        await deploy(res.data.abi, res.data.bytecode, name, symbol, supply, decimals); //setTokenAddress(addr); IMPORTANT FIX THIS!!!!!\n\n        toggleInProgress(false);\n        navigate(\"/token-builder/dashboard\");\n      } catch (e) {\n        toggleInProgress(false);\n        setTimeout(() => alert(\"Error: token not created\\n\" + e.message), 50);\n      }\n    }\n  };\n\n  const deploy = async function (abi, bytecode) {\n    const factory = new ethers.ContractFactory(abi, bytecode, web3.signer);\n\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    const contract = await factory.deploy(...args);\n    console.log(contract);\n  };\n\n  const navigate = useNavigate();\n\n  const handleReset = () => {\n    setTokenAddress('');\n  };\n\n  const handleUpdateContract = contract => {\n    setWeb3({ ...web3,\n      contract: contract\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Token Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Build your own ERC20 token on the Ethereum (Rinkeby) blockchain!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/token-builder/build\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        children: \"Create A Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/token-builder/dashboard\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        children: \"Token Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/token-builder/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/token-builder/build\",\n          element: /*#__PURE__*/_jsxDEV(BuildForm, {\n            onSubmit: handleSubmit,\n            inProgress: inProgress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/token-builder/dashboard\",\n          element: web3.signer ? /*#__PURE__*/_jsxDEV(DashboardCard, {\n            web3: web3,\n            tokenAddress: tokenAddress,\n            setTokenAddress: setTokenAddress,\n            updateContract: handleUpdateContract,\n            reset: handleReset\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 73\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions-container card card-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"instructions-section-header\",\n          children: \"Creating A Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"instructions-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Make sure you have Metamask installed on your browser.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Set Metamask to the Rinkeby Ethereum Test Network.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Get some test ETH from a faucet like \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://faucets.chain.link/rinkeby\",\n              target: \"_blank\",\n              children: \"Chainlink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Connect your Metamask account to this website.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Click the \\\"Create A Token\\\" button.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter the Name, Symbol and Initial Supply of your token.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter the number of decimal places your token can be divided into.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Click the \\\"Create Token\\\" button at the bottom of the form.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Approve the transaction in Metamask to pay the fee and gas for token deployment.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"instructions-section-header\",\n          children: \"Using The Token Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"instructions-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Make sure you have Metamask installed on your browser.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Click the \\\"Token Dashboard\\\" button above.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter the contract address for the ERC20 token you want to use.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Click the \\\"Get Token\\\" button.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"If the address points to a valid ERC20 token, the token details will appear.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"instructions-function-header\",\n          children: \"Transfer Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"instructions-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter Recipient (the address you are sending your tokens to).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter Amount (the number of tokens you are sending to the Recipient).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Click the \\\"Transfer\\\" button.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Approve the transaction in Metamask and pay the necessary gas.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Your balance shown in the dashboard will update once the transaction is added to the blockchain.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"instructions-function-header\",\n          children: \"Set Token Allowance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"instructions-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"This function allows another address to spend your tokens (or transfer the tokens to their own address).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter Spender (the address you are authorizing to spend your tokens).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter Amount (the number of tokens you are authorizing the Spender to spend).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Click the \\\"Set Allowance\\\" button.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Approve the transaction in Metamask and pay the necessary gas.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Once the transaction is added to the blockchain, the Spender address will have access to the approved Amount of your tokens.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"instructions-function-header\",\n          children: \"Claim Allowance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"instructions-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"This function transfers tokens to your account from an address that has approved an allowance to you.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter Owner (the address you are claiming tokens from).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"If the address is valid, the allowance the Owner has approved for your address will be shown.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter Amount (the number of tokens you are claiming).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Click the \\\"Claim Allowance\\\" button.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Approve the transaction in Metamask and pay the necessary gas.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Once the transaction is added to the blockchain, the tokens will be in your account, and the allowance from the Owner will be reduced\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"K18pdmq8Q3ztHMeYjFN+T2cEr3w=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/App.js"],"names":["logo","Routes","Route","Link","useNavigate","BuildForm","DashboardCard","ethers","useEffect","useState","Button","axios","App","web3","setWeb3","tokenAddress","setTokenAddress","inProgress","toggleInProgress","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","handleSubmit","name","symbol","supply","decimals","address","getAddress","i","Number","res","post","deploy","data","abi","bytecode","navigate","e","setTimeout","alert","message","factory","ContractFactory","args","contract","console","log","handleReset","handleUpdateContract"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport BuildForm from './Components/BuildForm.jsx';\nimport DashboardCard from './Components/DashboardCard'\nimport { ethers } from 'ethers';\nimport { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\nfunction App() {\n  const [web3, setWeb3] = useState({\n  });\n\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [inProgress, toggleInProgress] = useState(false);\n\n  useEffect(async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    setWeb3({\n      provider: provider,\n      signer: signer\n    });\n  }, []);\n\n  const handleSubmit = async (name, symbol, supply, decimals) => {\n    if (!inProgress) {\n      try {\n        toggleInProgress(true);\n\n        const address = await web3.signer.getAddress();\n\n        for(let i=0; i<Number(decimals); i++) {\n          supply+=\"0\";\n        }\n        \n        const res = await axios.post(\"https://jake-rice-token-builder.herokuapp.com/\"/*\"http://localhost:3001/\"*/, {\n          address: address,\n          name: name\n        });\n        \n        await deploy(res.data.abi, res.data.bytecode, name, symbol, supply, decimals);\n\n        //setTokenAddress(addr); IMPORTANT FIX THIS!!!!!\n        toggleInProgress(false);\n        navigate(\"/token-builder/dashboard\");\n      } catch (e) {\n        toggleInProgress(false);\n        setTimeout(() => alert(\"Error: token not created\\n\"+ e.message), 50);\n      }\n    }\n  }\n\n  const deploy = async (abi, bytecode, ...args) => {\n    const factory = new ethers.ContractFactory(abi, bytecode, web3.signer);\n    const contract = await factory.deploy(...args);\n    console.log(contract);\n  }\n\n  const navigate = useNavigate();\n\n  const handleReset = () => {\n    setTokenAddress('');\n  }\n\n  const handleUpdateContract = (contract) => {\n    setWeb3({...web3, contract: contract});\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Token Builder</h1>\n      <h2>Build your own ERC20 token on the Ethereum (Rinkeby) blockchain!</h2>\n      <Link to=\"/token-builder/build\"><Button variant=\"primary\">Create A Token</Button></Link>\n      <Link to=\"/token-builder/dashboard\"><Button variant=\"secondary\">Token Dashboard</Button></Link>\n      <div className=\"card-container\">\n        <Routes>\n          <Route path=\"/\" element={<></>}/>\n          <Route path=\"/token-builder/\" element={<></>}/>\n          <Route path=\"/token-builder/build\" element={<BuildForm onSubmit={handleSubmit} inProgress={inProgress}/>}/>\n          <Route path=\"/token-builder/dashboard\" element={web3.signer ? <DashboardCard web3={web3} tokenAddress={tokenAddress} setTokenAddress={setTokenAddress} updateContract={handleUpdateContract} reset={handleReset}/> : <></>}/>\n        </Routes>\n        <div className=\"instructions-container card card-info\">\n          <h3 className=\"instructions-section-header\">Creating A Token</h3>\n          <ol className=\"instructions-list\">\n            <li>Make sure you have Metamask installed on your browser.</li>\n            <li>Set Metamask to the Rinkeby Ethereum Test Network.</li>\n            <li>Get some test ETH from a faucet like <a href=\"http://faucets.chain.link/rinkeby\" target=\"_blank\">Chainlink</a></li>\n            <li>Connect your Metamask account to this website.</li>\n            <li>Click the \"Create A Token\" button.</li>\n            <li>Enter the Name, Symbol and Initial Supply of your token.</li>\n            <li>Enter the number of decimal places your token can be divided into.</li>\n            <li>Click the \"Create Token\" button at the bottom of the form.</li>\n            <li>Approve the transaction in Metamask to pay the fee and gas for token deployment.</li>\n          </ol>\n          <h3 className=\"instructions-section-header\">Using The Token Dashboard</h3>\n          <ol className=\"instructions-list\">\n            <li>Make sure you have Metamask installed on your browser.</li>\n            <li>Click the \"Token Dashboard\" button above.</li>\n            <li>Enter the contract address for the ERC20 token you want to use.</li>\n            <li>Click the \"Get Token\" button.</li>\n            <li>If the address points to a valid ERC20 token, the token details will appear.</li>\n          </ol>\n          <h4 className=\"instructions-function-header\">Transfer Tokens</h4>\n          <ol className=\"instructions-list\">\n            <li>Enter Recipient (the address you are sending your tokens to).</li>\n            <li>Enter Amount (the number of tokens you are sending to the Recipient).</li>\n            <li>Click the \"Transfer\" button.</li>\n            <li>Approve the transaction in Metamask and pay the necessary gas.</li>\n            <li>Your balance shown in the dashboard will update once the transaction is added to the blockchain.</li>\n          </ol>\n          <h4 className=\"instructions-function-header\">Set Token Allowance</h4>\n          <ol className=\"instructions-list\">\n            <li>This function allows another address to spend your tokens (or transfer the tokens to their own address).</li>\n            <li>Enter Spender (the address you are authorizing to spend your tokens).</li>\n            <li>Enter Amount (the number of tokens you are authorizing the Spender to spend).</li>\n            <li>Click the \"Set Allowance\" button.</li>\n            <li>Approve the transaction in Metamask and pay the necessary gas.</li>\n            <li>Once the transaction is added to the blockchain, the Spender address will have access to the approved Amount of your tokens.</li>\n          </ol>\n          <h4 className=\"instructions-function-header\">Claim Allowance</h4>\n          <ol className=\"instructions-list\">\n            <li>This function transfers tokens to your account from an address that has approved an allowance to you.</li>\n            <li>Enter Owner (the address you are claiming tokens from).</li>\n            <li>If the address is valid, the allowance the Owner has approved for your address will be shown.</li>\n            <li>Enter Amount (the number of tokens you are claiming).</li>\n            <li>Click the \"Claim Allowance\" button.</li>\n            <li>Approve the transaction in Metamask and pay the necessary gas.</li>\n            <li>Once the transaction is added to the blockchain, the tokens will be in your account, and the allowance from the Owner will be reduced</li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}