{"ast":null,"code":"var _jsxFileName = \"/Users/jake/workspace/token-builder/src/Components/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './dashboard.css';\nimport { Link } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport abi from './abi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst rxAddress = /^0x[a-fA-F0-9]{40}$/;\n\nconst Dashboard = props => {\n  _s();\n\n  const [transferRecipient, setTransferRecipient] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [allowanceSpender, setAllowanceSpender] = useState('');\n  const [allowanceAmount, setAllowanceAmount] = useState('');\n  const [allowanceAvailable, setAllowanceAvailable] = useState('');\n  const [validAllowance, setValidAllowance] = useState(false);\n  const [claimOwner, setClaimOwner] = useState('');\n  const [claimAmount, setClaimAmount] = useState('');\n  const [sendAllowance, setSendAllowance] = useState(false);\n  const [sendAddress, setSendAddress] = useState('');\n  useEffect(async () => {\n    if (rxAddress.test(claimOwner)) {\n      await props.provider.send(\"eth_requestAccounts\", []);\n      const signer = props.provider.getSigner();\n      const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n      const decimals = await erc20.decimals();\n\n      try {\n        const _allowance = await erc20.allowance(claimOwner, await signer.getAddress());\n\n        setAllowanceAvailable(formatBalance(_allowance.toString(), decimals));\n        setValidAllowance(true);\n      } catch (err) {\n        console.error(err);\n      }\n    } else setValidAllowance(false);\n  }, [claimOwner]);\n\n  const transferTokens = async (recipient, amount) => {\n    try {\n      await props.provider.send(\"eth_requestAccounts\", []);\n      const signer = props.provider.getSigner();\n      const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n      const sender = await signer.getAddress();\n      const balance = await erc20.balanceOf(sender);\n      const decimals = await erc20.decimals();\n      const success = await erc20.transfer(recipient, parseAmount(amount, decimals));\n      console.log(success);\n    } catch (e) {\n      console.error(e);\n      alert('Error: Transfer failed.');\n    }\n  };\n\n  const setTokenAllowance = async (recipient, amount) => {\n    try {\n      await props.provider.send(\"eth_requestAccounts\", []);\n      const signer = props.provider.getSigner();\n      const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n      const sender = await signer.getAddress();\n      const balance = await erc20.balanceOf(sender);\n      const decimals = await erc20.decimals();\n      let success = false;\n\n      if (balance.gte(parseAmount(amount, decimals))) {\n        success = await erc20.approve(recipient, parseAmount(amount, decimals));\n      } else alert(\"Error: Insufficient balance.\");\n    } catch (e) {\n      console.error(e);\n      alert('Error: Allowance failed.');\n    }\n  };\n\n  const transferAllowance = async (owner, recipient, amount) => {\n    try {\n      await props.provider.send(\"eth_requestAccounts\", []);\n      const signer = props.provider.getSigner();\n      const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n      const spender = await signer.getAddress();\n      const balance = await erc20.balanceOf(owner);\n      const decimals = await erc20.decimals();\n      let success = false;\n\n      if (balance >= parseAmount(amount, decimals)) {\n        success = await erc20.transferFrom(owner, recipient, parseAmount(amount, decimals));\n      }\n\n      console.log(success);\n    } catch (e) {\n      console.error(e);\n      alert('Error: Transfer failed.');\n    }\n  };\n\n  const formatBalance = (balance, dec) => {\n    if (dec === 0) return balance;\n    let bal = balance;\n\n    while (bal.length <= dec) bal = '0' + bal;\n\n    bal = bal.slice(0, 0 - dec) + '.' + bal.slice(0 - dec);\n\n    while (bal[bal.length - 1] === '0') bal = bal.slice(0, -1);\n\n    if (bal[bal.length - 1] === '.') bal = bal.slice(0, -1);\n    return bal;\n  };\n\n  const parseAmount = (amt, dec) => {\n    let amount = amt;\n\n    if (amount.indexOf('.') < 0) {\n      for (let i = 0; i < dec; i++) {\n        amount = amount + '0';\n      }\n\n      return amount;\n    }\n\n    while (amount.length - amount.indexOf('.') <= dec) amount = amount + '0';\n\n    if (amount.length - amount.indexOf('.') > dec + 1) amount = amount.slice(0, amount.indexOf('.') + dec);\n    return amount.slice(0, amount.indexOf('.')) + amount.slice(amount.indexOf('.') + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Token Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Token Address: \", props.tokenAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Token Name: \", props.tokenData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Token Symbol: \", props.tokenData.symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Account Address: \", props.tokenData.accountAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Token Balance: \", formatBalance(props.tokenData.balance.toString(), props.tokenData.decimals), \" \", props.tokenData.symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Transfer Tokens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Recipient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"text-input\",\n        value: transferRecipient,\n        onChange: event => setTransferRecipient(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 135\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: transferAmount,\n        onChange: event => setTransferAmount(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        variant: \"danger\",\n        onClick: () => transferTokens(transferRecipient, transferAmount),\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Set Token Allowance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Spender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"text-input\",\n        value: allowanceSpender,\n        onChange: event => setAllowanceSpender(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 133\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: allowanceAmount,\n        onChange: event => setAllowanceAmount(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        variant: \"danger\",\n        onClick: () => setTokenAllowance(allowanceSpender, allowanceAmount),\n        children: \"Set Allowance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Claim Allowance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Owner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"text-input\",\n        value: claimOwner,\n        onChange: event => setClaimOwner(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 121\n      }, this), validAllowance && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Available Allowance: \", allowanceAvailable.toString(), \" \", props.tokenData.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 130\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: claimAmount,\n        onChange: event => setClaimAmount(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        variant: \"danger\",\n        onClick: () => transferAllowance(claimOwner, sendAllowance ? sendAddress : props.tokenData.accountAddress, claimAmount),\n        children: sendAllowance ? \"Send Allowance\" : \"Claim Allowance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: sendAllowance,\n          onChange: () => setSendAllowance(!sendAllowance)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 24\n        }, this), \" Send to another address\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), sendAllowance && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Destination address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-input\",\n          value: sendAddress,\n          onChange: event => setSendAddress(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row btn-row\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/token-builder/dashboard\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: props.reset,\n          children: \"Use a Different Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"vj8iR5U9eaTsSzBnct7J4+RttFo=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/Components/Dashboard.jsx"],"names":["React","useState","useEffect","ethers","Link","Form","Button","abi","rxAddress","Dashboard","props","transferRecipient","setTransferRecipient","transferAmount","setTransferAmount","allowanceSpender","setAllowanceSpender","allowanceAmount","setAllowanceAmount","allowanceAvailable","setAllowanceAvailable","validAllowance","setValidAllowance","claimOwner","setClaimOwner","claimAmount","setClaimAmount","sendAllowance","setSendAllowance","sendAddress","setSendAddress","test","provider","send","signer","getSigner","erc20","Contract","tokenAddress","decimals","_allowance","allowance","getAddress","formatBalance","toString","err","console","error","transferTokens","recipient","amount","sender","balance","balanceOf","success","transfer","parseAmount","log","e","alert","setTokenAllowance","gte","approve","transferAllowance","owner","spender","transferFrom","dec","bal","length","slice","amt","indexOf","i","tokenData","name","symbol","accountAddress","event","target","value","reset"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers'\nimport './dashboard.css';\nimport { Link } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\nimport abi from './abi'\n\nconst rxAddress = /^0x[a-fA-F0-9]{40}$/;\n\nconst Dashboard = (props) => {\n\n    const [transferRecipient, setTransferRecipient] = useState('');\n    const [transferAmount, setTransferAmount] = useState('');\n\n    const [allowanceSpender, setAllowanceSpender] = useState('');\n    const [allowanceAmount, setAllowanceAmount] = useState('');\n\n    const [allowanceAvailable, setAllowanceAvailable] = useState('');\n    const [validAllowance, setValidAllowance] = useState(false);\n\n    const [claimOwner, setClaimOwner] = useState('');\n    const [claimAmount, setClaimAmount] = useState('');\n    const [sendAllowance, setSendAllowance] = useState(false);\n    const [sendAddress, setSendAddress] = useState('');\n\n    useEffect(async () => {\n        if (rxAddress.test(claimOwner)) {\n            await props.provider.send(\"eth_requestAccounts\", []);\n            const signer = props.provider.getSigner();\n            const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n            const decimals = await erc20.decimals();\n            try {\n                const _allowance = await erc20.allowance(claimOwner, await signer.getAddress());\n                setAllowanceAvailable(formatBalance(_allowance.toString(), decimals));\n                setValidAllowance(true);\n            } catch(err) {\n                console.error(err);\n            }\n        }\n        else setValidAllowance(false);\n    }, [claimOwner]);\n\n    const transferTokens = async (recipient, amount) => {\n        try {\n            await props.provider.send(\"eth_requestAccounts\", []);\n            const signer = props.provider.getSigner();\n            const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n            const sender = await signer.getAddress();\n            const balance = await erc20.balanceOf(sender);\n            const decimals = await erc20.decimals();\n            const success = await erc20.transfer(recipient, parseAmount(amount, decimals));\n            console.log(success);\n        } catch (e) { \n            console.error(e);\n            alert('Error: Transfer failed.');\n        }\n    }\n\n    const setTokenAllowance = async (recipient, amount) => {\n        try {\n            await props.provider.send(\"eth_requestAccounts\", []);\n            const signer = props.provider.getSigner();\n            const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n            const sender = await signer.getAddress();\n            const balance = await erc20.balanceOf(sender);\n            const decimals = await erc20.decimals();\n            let success = false;\n            if (balance.gte(parseAmount(amount, decimals))) {\n                success = await erc20.approve(recipient, parseAmount(amount, decimals));\n            }\n            else alert(\"Error: Insufficient balance.\")\n        } catch (e) { \n            console.error(e);\n            alert('Error: Allowance failed.');\n        }\n    }\n\n    const transferAllowance = async (owner, recipient, amount) => {\n        try {\n            await props.provider.send(\"eth_requestAccounts\", []);\n            const signer = props.provider.getSigner();\n            const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n            const spender = await signer.getAddress();\n            const balance = await erc20.balanceOf(owner);\n            const decimals = await erc20.decimals();\n            let success = false;\n            if (balance >= parseAmount(amount, decimals) ) {\n                success = await erc20.transferFrom(owner, recipient, parseAmount(amount, decimals));\n            }\n            console.log(success);\n        } catch (e) { \n            console.error(e);\n            alert('Error: Transfer failed.');\n        }\n    }\n\n    const formatBalance = (balance, dec) => {\n        if (dec === 0) return balance;\n        let bal = balance;\n        while (bal.length <= dec) bal = '0'+bal;\n        bal = bal.slice(0,0-dec)+'.'+bal.slice(0-dec);\n        while (bal[bal.length-1] === '0') bal = bal.slice(0,-1);\n        if (bal[bal.length-1] === '.') bal = bal.slice(0,-1);\n        return bal;\n    }\n\n    const parseAmount = (amt, dec) => {\n        let amount = amt;\n        if (amount.indexOf('.') < 0) {\n            for (let i=0; i<dec; i++) {\n                amount=amount+'0';\n            }\n            return amount;\n        }\n        while (amount.length-amount.indexOf('.') <= dec) amount=amount+'0';\n        if (amount.length-amount.indexOf('.') > dec+1) amount = amount.slice(0,amount.indexOf('.')+dec);\n        return amount.slice(0,amount.indexOf('.'))+amount.slice(amount.indexOf('.')+1);\n    }\n\n    return (\n        <Form>\n            <h3>Token Info</h3>\n            <div className=\"form-row\"><label>Token Address: {props.tokenAddress}</label></div>\n            <div className=\"form-row\"><label>Token Name: {props.tokenData.name}</label></div>\n            <div className=\"form-row\"><label>Token Symbol: {props.tokenData.symbol}</label></div>\n            <div className=\"form-row\"><label>Account Address: {props.tokenData.accountAddress}</label></div>\n            <div className=\"form-row\"><label>Token Balance: {formatBalance(props.tokenData.balance.toString(), props.tokenData.decimals)} {props.tokenData.symbol}</label></div>\n            <hr/>\n            <h3>Transfer Tokens</h3>\n            <div className=\"form-row\">\n                <label>Recipient</label>\n                <input className=\"text-input\" value={transferRecipient} onChange={(event)=>setTransferRecipient(event.target.value)}/><br/>\n                <label>Amount</label>\n                <input type=\"number\" value={transferAmount} onChange={(event)=>setTransferAmount(event.target.value)}/>\n                <Button size=\"sm\" variant=\"danger\" onClick={() => transferTokens(transferRecipient, transferAmount)}>Transfer</Button>\n            </div>\n            <hr/>\n            <h3>Set Token Allowance</h3>\n            <div className=\"form-row\">\n                <label>Spender</label>\n                <input className=\"text-input\" value={allowanceSpender} onChange={(event)=>setAllowanceSpender(event.target.value)}/><br/>\n                <label>Amount</label>\n                <input type=\"number\" value={allowanceAmount} onChange={(event)=>setAllowanceAmount(event.target.value)}/>\n                <Button size=\"sm\" variant=\"danger\" onClick={() => setTokenAllowance(allowanceSpender, allowanceAmount)}>Set Allowance</Button>\n            </div>\n            <hr/>\n            <h3>Claim Allowance</h3>\n            <div className=\"form-row\">\n                <label>Owner</label>\n                <input className=\"text-input\" value={claimOwner} onChange={(event)=>setClaimOwner(event.target.value)}/><br/>\n                {validAllowance && <><label>Available Allowance: {allowanceAvailable.toString()} {props.tokenData.symbol}</label><br/></>}\n                <label>Amount</label>\n                <input type=\"number\" value={claimAmount} onChange={(event)=>setClaimAmount(event.target.value)}/>\n                <Button size=\"sm\" variant=\"danger\" onClick={() => transferAllowance(claimOwner, (sendAllowance ? sendAddress : props.tokenData.accountAddress), claimAmount)}>{sendAllowance ? \"Send Allowance\" : \"Claim Allowance\"}</Button>\n                <label><input type=\"checkbox\" checked={sendAllowance} onChange={()=>setSendAllowance(!sendAllowance)}/> Send to another address</label>\n                {sendAllowance &&\n                    <div>\n                        <label>Destination address</label>\n                        <input className=\"text-input\" value={sendAddress} onChange={(event)=>setSendAddress(event.target.value)}/>\n                    </div>}\n            </div>\n            <div className=\"form-row btn-row\">\n                <Link to=\"/token-builder/dashboard\">\n                    <Button variant=\"secondary\" onClick={props.reset}>Use a Different Token</Button>\n                </Link>\n            </div>\n        </Form>\n    )\n}\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}