{"ast":null,"code":"import _asyncToGenerator from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/regenerator/index.js\";import logo from'./logo.svg';import'./App.css';import BuildForm from'./Components/BuildForm.jsx';import Dashboard from'./Components/Dashboard.jsx';import{ethers}from'ethers';import{useState}from'react';import CustomERC20Builder from'./artifacts/src/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var contractAddress='0x68D141E76b8CFE92A2752e0cD6BF143d48f5Ab69';//Rinkeby\nfunction App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),tokenAddress=_useState2[0],setTokenAddress=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),newToken=_useState4[0],toggleNewToken=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),tokenDashboard=_useState6[0],toggleTokenDashboard=_useState6[1];var build=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(name,symbol,supply,decimals){var provider,signer,contract,owner,eventFilter;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:provider=new ethers.providers.Web3Provider(window.ethereum,\"any\");_context.next=3;return provider.send(\"eth_requestAccounts\",[]);case 3:signer=provider.getSigner();contract=new ethers.Contract(contractAddress,CustomERC20Builder.abi,signer);_context.next=7;return signer.getAddress();case 7:owner=_context.sent;console.log(contract);eventFilter=contract.filters.TokenDeployment(owner,null);contract.on(eventFilter,function(ownerAddress,tokenAddr,event){setTokenAddress(tokenAddr);});_context.next=13;return contract.buildERC20(owner,supply,name,symbol,decimals,{\"value\":ethers.utils.parseEther(\"0.001\")});case 13:case\"end\":return _context.stop();}}},_callee);}));return function build(_x,_x2,_x3,_x4){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Token Builder\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Build your own ERC20 token on the Ethereum blockchain!\"}),newToken&&/*#__PURE__*/_jsx(BuildForm,{onSubmit:build}),tokenDashboard&&/*#__PURE__*/_jsx(Dashboard,{tokenAddress:tokenAddress}),/*#__PURE__*/_jsxs(\"div\",{children:[!newToken&&/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\"Create A New Token\",onClick:function onClick(){toggleTokenDashboard(false);toggleNewToken(true);}}),!tokenDashboard&&/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\"Token Dashboard\",onClick:function onClick(){toggleNewToken(false);toggleTokenDashboard(true);}})]})]});}export default App;","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/App.js"],"names":["logo","BuildForm","Dashboard","ethers","useState","CustomERC20Builder","contractAddress","App","tokenAddress","setTokenAddress","newToken","toggleNewToken","tokenDashboard","toggleTokenDashboard","build","name","symbol","supply","decimals","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","contract","Contract","abi","getAddress","owner","console","log","eventFilter","filters","TokenDeployment","on","ownerAddress","tokenAddr","event","buildERC20","utils","parseEther"],"mappings":"8WAAA,MAAOA,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,OAASC,QAAT,KAAyB,OAAzB,CAEA,MAAOC,CAAAA,kBAAP,KAA+B,0EAA/B,C,wFACA,GAAMC,CAAAA,eAAe,CAAG,4CAAxB,CAAsE;AAEtE,QAASC,CAAAA,GAAT,EAAe,CACb,cAAwCH,QAAQ,CAAC,EAAD,CAAhD,wCAAOI,YAAP,eAAqBC,eAArB,eACA,eAAmCL,QAAQ,CAAC,KAAD,CAA3C,yCAAOM,QAAP,eAAiBC,cAAjB,eACA,eAA+CP,QAAQ,CAAC,KAAD,CAAvD,yCAAOQ,cAAP,eAAuBC,oBAAvB,eAEA,GAAMC,CAAAA,KAAK,0FAAG,iBAAOC,IAAP,CAAaC,MAAb,CAAqBC,MAArB,CAA6BC,QAA7B,iKACNC,QADM,CACK,GAAIhB,CAAAA,MAAM,CAACiB,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAmD,KAAnD,CADL,uBAENJ,CAAAA,QAAQ,CAACK,IAAT,CAAc,qBAAd,CAAqC,EAArC,CAFM,QAGNC,MAHM,CAGGN,QAAQ,CAACO,SAAT,EAHH,CAINC,QAJM,CAIK,GAAIxB,CAAAA,MAAM,CAACyB,QAAX,CAAoBtB,eAApB,CAAqCD,kBAAkB,CAACwB,GAAxD,CAA6DJ,MAA7D,CAJL,uBAKQA,CAAAA,MAAM,CAACK,UAAP,EALR,QAKNC,KALM,eAMZC,OAAO,CAACC,GAAR,CAAYN,QAAZ,EACMO,WAPM,CAOQP,QAAQ,CAACQ,OAAT,CAAiBC,eAAjB,CAAiCL,KAAjC,CAAwC,IAAxC,CAPR,CAQZJ,QAAQ,CAACU,EAAT,CAAYH,WAAZ,CAAyB,SAACI,YAAD,CAAeC,SAAf,CAA0BC,KAA1B,CAAoC,CAC3D/B,eAAe,CAAC8B,SAAD,CAAf,CACD,CAFD,EARY,uBAWNZ,CAAAA,QAAQ,CAACc,UAAT,CAAoBV,KAApB,CAA2Bd,MAA3B,CAAmCF,IAAnC,CAAyCC,MAAzC,CAAiDE,QAAjD,CAA2D,CAAC,QAASf,MAAM,CAACuC,KAAP,CAAaC,UAAb,CAAwB,OAAxB,CAAV,CAA3D,CAXM,wDAAH,kBAAL7B,CAAAA,KAAK,wDAAX,CAcA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,qCADF,cAEE,8EAFF,CAGGJ,QAAQ,eAAI,KAAC,SAAD,EAAW,QAAQ,CAAEI,KAArB,EAHf,CAIGF,cAAc,eAAI,KAAC,SAAD,EAAW,YAAY,CAAEJ,YAAzB,EAJrB,cAKE,uBACG,CAACE,QAAD,eAAa,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,oBAA3B,CAAgD,OAAO,CAAE,kBAAI,CACzEG,oBAAoB,CAAC,KAAD,CAApB,CACAF,cAAc,CAAC,IAAD,CAAd,CACD,CAHa,EADhB,CAKG,CAACC,cAAD,eAAkB,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,iBAA3B,CAA6C,OAAO,CAAE,kBAAI,CAC3ED,cAAc,CAAC,KAAD,CAAd,CACAE,oBAAoB,CAAC,IAAD,CAApB,CACD,CAHkB,EALrB,GALF,GADF,CAkBD,CAED,cAAeN,CAAAA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport BuildForm from './Components/BuildForm.jsx';\nimport Dashboard from './Components/Dashboard.jsx';\nimport { ethers } from 'ethers';\nimport { useState } from 'react';\n\nimport CustomERC20Builder from './artifacts/src/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nconst contractAddress = '0x68D141E76b8CFE92A2752e0cD6BF143d48f5Ab69'; //Rinkeby\n\nfunction App() {\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [newToken, toggleNewToken] = useState(false);\n  const [tokenDashboard, toggleTokenDashboard] = useState(false);\n\n  const build = async (name, symbol, supply, decimals) => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n    const owner = await signer.getAddress();\n    console.log(contract);\n    const eventFilter = contract.filters.TokenDeployment(owner, null);\n    contract.on(eventFilter, (ownerAddress, tokenAddr, event) => {\n      setTokenAddress(tokenAddr);\n    })\n    await contract.buildERC20(owner, supply, name, symbol, decimals, {\"value\": ethers.utils.parseEther(\"0.001\")});\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Token Builder</h1>\n      <h2>Build your own ERC20 token on the Ethereum blockchain!</h2>\n      {newToken && <BuildForm onSubmit={build}/>}\n      {tokenDashboard && <Dashboard tokenAddress={tokenAddress}/>}\n      <div>\n        {!newToken && <input type=\"button\" value=\"Create A New Token\" onClick={()=>{\n          toggleTokenDashboard(false);\n          toggleNewToken(true);\n        }}/>}\n        {!tokenDashboard &&<input type=\"button\" value=\"Token Dashboard\" onClick={()=>{\n          toggleNewToken(false);\n          toggleTokenDashboard(true);\n        }}/>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}