{"ast":null,"code":"var _jsxFileName = \"/Users/jake/workspace/token-builder/src/Components/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './dashboard.css';\nimport { Link } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport abi from './abi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst rxAddress = /^0x[a-fA-F0-9]{40}$/;\n\nconst Dashboard = props => {\n  _s();\n\n  const [transferRecipient, setTransferRecipient] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [allowanceSpender, setAllowanceSpender] = useState('');\n  const [allowanceAmount, setAllowanceAmount] = useState('');\n  const [allowanceAvailable, setAllowanceAvailable] = useState('');\n  const [validAllowance, setValidAllowance] = useState(false);\n  const [claimOwner, setClaimOwner] = useState('');\n  const [claimAmount, setClaimAmount] = useState('');\n  const [sendAllowance, setSendAllowance] = useState(false);\n  const [sendAddress, setSendAddress] = useState('');\n  useEffect(async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n    const filter = erc20.filters.Transfer(signer.address);\n    erc20.on(filter, async (from, to, amount, event) => {\n      props.setTokenData({ ...props.tokenData,\n        balance: await erc20.balanceOf(props.tokenData.accountAddress)\n      });\n    });\n    provider.provider.on(\"accountsChanged\", async () => {\n      const signer = provider.getSigner();\n      const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n      const pUser = signer.getAddress();\n      const pName = erc20.name();\n      const pSymbol = erc20.symbol();\n      const pDecimals = erc20.decimals();\n      const [user, name, symbol, decimals] = await Promise.all([pUser, pName, pSymbol, pDecimals]);\n      const balance = await erc20.balanceOf(user);\n      props.setTokenData({\n        accountAddress: user,\n        balance: balance.toString(),\n        name: name,\n        symbol: symbol,\n        decimals: decimals\n      });\n    });\n    return () => {\n      erc20.removeAllListeners();\n    };\n  }, []);\n  useEffect(async () => {\n    if (rxAddress.test(claimOwner)) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n      const decimals = await erc20.decimals();\n\n      try {\n        const _allowance = await erc20.allowance(claimOwner, await signer.getAddress());\n\n        setAllowanceAvailable(formatBalance(_allowance.toString(), decimals));\n        setValidAllowance(true);\n      } catch (err) {\n        console.error(err);\n      }\n    } else setValidAllowance(false);\n  }, [claimOwner]);\n\n  const transferTokens = async (recipient, amount) => {\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n      const sender = await signer.getAddress();\n      const balance = await erc20.balanceOf(sender);\n      const decimals = await erc20.decimals();\n      const success = await erc20.transfer(recipient, parseAmount(amount, decimals));\n    } catch (e) {\n      console.error(e);\n      alert('Error: Transfer failed.');\n    }\n  };\n\n  const setTokenAllowance = async (recipient, amount) => {\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n      const sender = await signer.getAddress();\n      const balance = await erc20.balanceOf(sender);\n      const decimals = await erc20.decimals();\n      let success = false;\n\n      if (balance.gte(parseAmount(amount, decimals))) {\n        success = await erc20.approve(recipient, parseAmount(amount, decimals));\n      } else alert(\"Error: Insufficient balance.\");\n    } catch (e) {\n      console.error(e);\n      alert('Error: Allowance failed.');\n    }\n  };\n\n  const transferAllowance = async (owner, recipient, amount) => {\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n      const balance = await erc20.balanceOf(owner);\n      const decimals = await erc20.decimals();\n      let success = false;\n\n      if (balance >= formatBalance(amount, decimals)) {\n        success = await erc20.transferFrom(owner, recipient, parseAmount(amount, decimals));\n      }\n\n      console.log(success, balance, formatBalance(amount, decimals));\n    } catch (e) {\n      console.error(e);\n      alert('Error: Transfer failed.');\n    }\n  };\n\n  const formatBalance = (balance, dec) => {\n    if (dec === 0) return balance;\n    let bal = balance;\n\n    while (bal.length <= dec) bal = '0' + bal;\n\n    bal = bal.slice(0, 0 - dec) + '.' + bal.slice(0 - dec);\n\n    while (bal[bal.length - 1] === '0') bal = bal.slice(0, -1);\n\n    if (bal[bal.length - 1] === '.') bal = bal.slice(0, -1);\n    return bal;\n  };\n\n  const parseAmount = (amt, dec) => {\n    let amount = amt;\n\n    if (amount.indexOf('.') < 0) {\n      for (let i = 0; i < dec; i++) {\n        amount = amount + '0';\n      }\n\n      return amount;\n    }\n\n    while (amount.length - amount.indexOf('.') <= dec) amount = amount + '0';\n\n    if (amount.length - amount.indexOf('.') > dec + 1) amount = amount.slice(0, amount.indexOf('.') + dec);\n    return amount.slice(0, amount.indexOf('.')) + amount.slice(amount.indexOf('.') + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Token Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Token Address: \", props.tokenAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Token Name: \", props.tokenData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Token Symbol: \", props.tokenData.symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Account Address: \", props.tokenData.accountAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Token Balance: \", formatBalance(props.tokenData.balance.toString(), props.tokenData.decimals), \" \", props.tokenData.symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Transfer Tokens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Recipient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"text-input\",\n        value: transferRecipient,\n        onChange: event => setTransferRecipient(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 135\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: transferAmount,\n        onChange: event => setTransferAmount(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        variant: \"danger\",\n        onClick: () => transferTokens(transferRecipient, transferAmount),\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Set Token Allowance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Spender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"text-input\",\n        value: allowanceSpender,\n        onChange: event => setAllowanceSpender(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 133\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: allowanceAmount,\n        onChange: event => setAllowanceAmount(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        variant: \"danger\",\n        onClick: () => setTokenAllowance(allowanceSpender, allowanceAmount),\n        children: \"Set Allowance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Claim Allowance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Owner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"text-input\",\n        value: claimOwner,\n        onChange: event => setClaimOwner(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 121\n      }, this), validAllowance && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Available Allowance: \", allowanceAvailable.toString(), \" \", props.tokenData.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 130\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: claimAmount,\n        onChange: event => setClaimAmount(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        variant: \"danger\",\n        onClick: () => transferAllowance(claimOwner, sendAllowance ? sendAddress : props.tokenData.accountAddress, claimAmount),\n        children: sendAllowance ? \"Send Allowance\" : \"Claim Allowance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: sendAllowance,\n          onChange: () => setSendAllowance(!sendAllowance)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 24\n        }, this), \" Send to another address\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), sendAllowance && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Destination address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-input\",\n          value: sendAddress,\n          onChange: event => setSendAddress(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row btn-row\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/token-builder/dashboard\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: props.reset,\n          children: \"Use a Different Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"9bI9M7GVhYmCn850ZoEeOLOb9O0=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/Components/Dashboard.jsx"],"names":["React","useState","useEffect","ethers","Link","Form","Button","abi","rxAddress","Dashboard","props","transferRecipient","setTransferRecipient","transferAmount","setTransferAmount","allowanceSpender","setAllowanceSpender","allowanceAmount","setAllowanceAmount","allowanceAvailable","setAllowanceAvailable","validAllowance","setValidAllowance","claimOwner","setClaimOwner","claimAmount","setClaimAmount","sendAllowance","setSendAllowance","sendAddress","setSendAddress","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","erc20","Contract","tokenAddress","filter","filters","Transfer","address","on","from","to","amount","event","setTokenData","tokenData","balance","balanceOf","accountAddress","pUser","getAddress","pName","name","pSymbol","symbol","pDecimals","decimals","user","Promise","all","toString","removeAllListeners","test","_allowance","allowance","formatBalance","err","console","error","transferTokens","recipient","sender","success","transfer","parseAmount","e","alert","setTokenAllowance","gte","approve","transferAllowance","owner","transferFrom","log","dec","bal","length","slice","amt","indexOf","i","target","value","reset"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers'\nimport './dashboard.css';\nimport { Link } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\nimport abi from './abi'\n\nconst rxAddress = /^0x[a-fA-F0-9]{40}$/;\n\nconst Dashboard = (props) => {\n\n    const [transferRecipient, setTransferRecipient] = useState('');\n    const [transferAmount, setTransferAmount] = useState('');\n\n    const [allowanceSpender, setAllowanceSpender] = useState('');\n    const [allowanceAmount, setAllowanceAmount] = useState('');\n\n    const [allowanceAvailable, setAllowanceAvailable] = useState('');\n    const [validAllowance, setValidAllowance] = useState(false);\n\n    const [claimOwner, setClaimOwner] = useState('');\n    const [claimAmount, setClaimAmount] = useState('');\n    const [sendAllowance, setSendAllowance] = useState(false);\n    const [sendAddress, setSendAddress] = useState('');\n\n    useEffect(async () => {\n        const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n        const filter = erc20.filters.Transfer(signer.address);\n        erc20.on(filter, async (from, to, amount, event) => {\n            props.setTokenData({...props.tokenData, balance: await erc20.balanceOf(props.tokenData.accountAddress)});\n        });\n        provider.provider.on(\"accountsChanged\", async () => {\n            const signer = provider.getSigner();\n            const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n            const pUser = signer.getAddress();\n            const pName = erc20.name();\n            const pSymbol = erc20.symbol();\n            const pDecimals = erc20.decimals();\n            const [user, name, symbol, decimals] = await Promise.all([pUser, pName, pSymbol, pDecimals]);\n            const balance = await erc20.balanceOf(user);\n            props.setTokenData({\n                accountAddress: user,\n                balance: balance.toString(),\n                name: name,\n                symbol: symbol,\n                decimals: decimals\n            });\n        });\n        return (()=>{\n            erc20.removeAllListeners();\n        });\n    }, []);\n\n    useEffect(async () => {\n        if (rxAddress.test(claimOwner)) {\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            await provider.send(\"eth_requestAccounts\", []);\n            const signer = provider.getSigner();\n            const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n            const decimals = await erc20.decimals();\n            try {\n                const _allowance = await erc20.allowance(claimOwner, await signer.getAddress());\n                setAllowanceAvailable(formatBalance(_allowance.toString(), decimals));\n                setValidAllowance(true);\n            } catch(err) {\n                console.error(err);\n            }\n        }\n        else setValidAllowance(false);\n    }, [claimOwner]);\n\n    const transferTokens = async (recipient, amount) => {\n        try {\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            await provider.send(\"eth_requestAccounts\", []);\n            const signer = provider.getSigner();\n            const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n            const sender = await signer.getAddress();\n            const balance = await erc20.balanceOf(sender);\n            const decimals = await erc20.decimals();\n            const success = await erc20.transfer(recipient, parseAmount(amount, decimals));\n        } catch (e) { \n            console.error(e);\n            alert('Error: Transfer failed.');\n        }\n    }\n\n    const setTokenAllowance = async (recipient, amount) => {\n        try {\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            await provider.send(\"eth_requestAccounts\", []);\n            const signer = provider.getSigner();\n            const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n            const sender = await signer.getAddress();\n            const balance = await erc20.balanceOf(sender);\n            const decimals = await erc20.decimals();\n            let success = false;\n            if (balance.gte(parseAmount(amount, decimals))) {\n                success = await erc20.approve(recipient, parseAmount(amount, decimals));\n            }\n            else alert(\"Error: Insufficient balance.\")\n        } catch (e) { \n            console.error(e);\n            alert('Error: Allowance failed.');\n        }\n    }\n\n    const transferAllowance = async (owner, recipient, amount) => {\n        try {\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            await provider.send(\"eth_requestAccounts\", []);\n            const signer = provider.getSigner();\n            const erc20 = new ethers.Contract(props.tokenAddress, abi, signer);\n            const balance = await erc20.balanceOf(owner);\n            const decimals = await erc20.decimals();\n            let success = false;\n            if (balance >= formatBalance(amount, decimals) ) {\n                success = await erc20.transferFrom(owner, recipient, parseAmount(amount, decimals));\n            }\n            console.log(success, balance, formatBalance(amount, decimals));\n        } catch (e) { \n            console.error(e);\n            alert('Error: Transfer failed.');\n        }\n    }\n\n    const formatBalance = (balance, dec) => {\n        if (dec === 0) return balance;\n        let bal = balance;\n        while (bal.length <= dec) bal = '0'+bal;\n        bal = bal.slice(0,0-dec)+'.'+bal.slice(0-dec);\n        while (bal[bal.length-1] === '0') bal = bal.slice(0,-1);\n        if (bal[bal.length-1] === '.') bal = bal.slice(0,-1);\n        return bal;\n    }\n\n    const parseAmount = (amt, dec) => {\n        let amount = amt;\n        if (amount.indexOf('.') < 0) {\n            for (let i=0; i<dec; i++) {\n                amount=amount+'0';\n            }\n            return amount;\n        }\n        while (amount.length-amount.indexOf('.') <= dec) amount=amount+'0';\n        if (amount.length-amount.indexOf('.') > dec+1) amount = amount.slice(0,amount.indexOf('.')+dec);\n        return amount.slice(0,amount.indexOf('.'))+amount.slice(amount.indexOf('.')+1);\n    }\n\n    return (\n        <Form>\n            <h3>Token Info</h3>\n            <div className=\"form-row\"><label>Token Address: {props.tokenAddress}</label></div>\n            <div className=\"form-row\"><label>Token Name: {props.tokenData.name}</label></div>\n            <div className=\"form-row\"><label>Token Symbol: {props.tokenData.symbol}</label></div>\n            <div className=\"form-row\"><label>Account Address: {props.tokenData.accountAddress}</label></div>\n            <div className=\"form-row\"><label>Token Balance: {formatBalance(props.tokenData.balance.toString(), props.tokenData.decimals)} {props.tokenData.symbol}</label></div>\n            <hr/>\n            <h3>Transfer Tokens</h3>\n            <div className=\"form-row\">\n                <label>Recipient</label>\n                <input className=\"text-input\" value={transferRecipient} onChange={(event)=>setTransferRecipient(event.target.value)}/><br/>\n                <label>Amount</label>\n                <input type=\"number\" value={transferAmount} onChange={(event)=>setTransferAmount(event.target.value)}/>\n                <Button size=\"sm\" variant=\"danger\" onClick={() => transferTokens(transferRecipient, transferAmount)}>Transfer</Button>\n            </div>\n            <hr/>\n            <h3>Set Token Allowance</h3>\n            <div className=\"form-row\">\n                <label>Spender</label>\n                <input className=\"text-input\" value={allowanceSpender} onChange={(event)=>setAllowanceSpender(event.target.value)}/><br/>\n                <label>Amount</label>\n                <input type=\"number\" value={allowanceAmount} onChange={(event)=>setAllowanceAmount(event.target.value)}/>\n                <Button size=\"sm\" variant=\"danger\" onClick={() => setTokenAllowance(allowanceSpender, allowanceAmount)}>Set Allowance</Button>\n            </div>\n            <hr/>\n            <h3>Claim Allowance</h3>\n            <div className=\"form-row\">\n                <label>Owner</label>\n                <input className=\"text-input\" value={claimOwner} onChange={(event)=>setClaimOwner(event.target.value)}/><br/>\n                {validAllowance && <><label>Available Allowance: {allowanceAvailable.toString()} {props.tokenData.symbol}</label><br/></>}\n                <label>Amount</label>\n                <input type=\"number\" value={claimAmount} onChange={(event)=>setClaimAmount(event.target.value)}/>\n                <Button size=\"sm\" variant=\"danger\" onClick={() => transferAllowance(claimOwner, (sendAllowance ? sendAddress : props.tokenData.accountAddress), claimAmount)}>{sendAllowance ? \"Send Allowance\" : \"Claim Allowance\"}</Button>\n                <label><input type=\"checkbox\" checked={sendAllowance} onChange={()=>setSendAllowance(!sendAllowance)}/> Send to another address</label>\n                {sendAllowance &&\n                    <div>\n                        <label>Destination address</label>\n                        <input className=\"text-input\" value={sendAddress} onChange={(event)=>setSendAddress(event.target.value)}/>\n                    </div>}\n            </div>\n            <div className=\"form-row btn-row\">\n                <Link to=\"/token-builder/dashboard\">\n                    <Button variant=\"secondary\" onClick={props.reset}>Use a Different Token</Button>\n                </Link>\n            </div>\n        </Form>\n    )\n}\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}