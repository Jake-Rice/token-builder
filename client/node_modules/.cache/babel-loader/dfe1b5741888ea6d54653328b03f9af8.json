{"ast":null,"code":"var _jsxFileName = \"/Users/jake/workspace/token-builder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport BuildForm from './Components/BuildForm.jsx';\nimport ConnectButton from './Components/ConnectButton.jsx';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport CustomERC20Builder from './artifacts/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = '';\n\nfunction App() {\n  _s();\n\n  const [web3Connected, setWeb3Connected] = useState(false);\n  let provider, signer, contract;\n\n  const connect = async () => {\n    provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    await provider.send(\"eth_requestAccounts\", []);\n    signer = provider.getSigner();\n    contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n    setWeb3Connected(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Token Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Build your own ERC20 token on the Ethereum blockchain!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [provider, \" \", signer, \" \", contract]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), web3Connected ? /*#__PURE__*/_jsxDEV(BuildForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(ConnectButton, {\n      onConnect: connect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7V8OyFa/UsgD95JWOT4fE/6AX58=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/App.js"],"names":["logo","BuildForm","ConnectButton","useState","ethers","CustomERC20Builder","contractAddress","App","web3Connected","setWeb3Connected","provider","signer","contract","connect","providers","Web3Provider","window","ethereum","send","getSigner","Contract","abi"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,OAAOC,kBAAP,MAA+B,sEAA/B;;AACA,MAAMC,eAAe,GAAG,EAAxB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,KAAD,CAAlD;AAEA,MAAIO,QAAJ,EAAcC,MAAd,EAAsBC,QAAtB;;AAEA,QAAMC,OAAO,GAAG,YAAY;AAC1BH,IAAAA,QAAQ,GAAG,IAAIN,MAAM,CAACU,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CAAX;AACA,UAAMP,QAAQ,CAACQ,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;AACAP,IAAAA,MAAM,GAAGD,QAAQ,CAACS,SAAT,EAAT;AACAP,IAAAA,QAAQ,GAAG,IAAIR,MAAM,CAACgB,QAAX,CAAoBd,eAApB,EAAqCD,kBAAkB,CAACgB,GAAxD,EAA6DV,MAA7D,CAAX;AACAF,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,iBAAKC,QAAL,OAAgBC,MAAhB,OAAyBC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGJ,aAAa,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAkB,QAAC,aAAD;AAAe,MAAA,SAAS,EAAEK;AAA1B;AAAA;AAAA;AAAA;AAAA,YAJlC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GArBQN,G;;KAAAA,G;AAuBT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport BuildForm from './Components/BuildForm.jsx';\nimport ConnectButton from './Components/ConnectButton.jsx'\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\n\nimport CustomERC20Builder from './artifacts/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nconst contractAddress = '';\n\nfunction App() {\n  const [web3Connected, setWeb3Connected] = useState(false);\n\n  let provider, signer, contract;\n  \n  const connect = async () => {\n    provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    await provider.send(\"eth_requestAccounts\", []);\n    signer = provider.getSigner();\n    contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n    setWeb3Connected(true);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Token Builder</h1>\n      <h2>Build your own ERC20 token on the Ethereum blockchain!</h2>\n      <h3>{provider} {signer} {contract}</h3>\n      {web3Connected ? <BuildForm/> : <ConnectButton onConnect={connect}/>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}