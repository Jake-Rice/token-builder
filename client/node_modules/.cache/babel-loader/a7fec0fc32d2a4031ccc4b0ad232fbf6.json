{"ast":null,"code":"import _asyncToGenerator from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/regenerator/index.js\";import logo from'./logo.svg';import'bootstrap/dist/css/bootstrap.min.css';import'./App.css';import{Routes,Route,Link,useNavigate}from'react-router-dom';import BuildForm from'./Components/BuildForm.jsx';import DashboardCard from'./Components/DashboardCard';import{ethers}from'ethers';import{useState}from'react';import Button from'react-bootstrap/Button';import CustomERC20Builder from'./artifacts/src/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var contractAddress='0x96D998E65eBf1BFEdEEDaf59c8D63EC6E06175B9';//Rinkeby\nfunction App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),tokenAddress=_useState2[0],setTokenAddress=_useState2[1];var _useState3=useState({accountAddress:'',balance:'',name:'',symbol:'',decimals:''}),_useState4=_slicedToArray(_useState3,2),tokenData=_useState4[0],setTokenData=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),inProgress=_useState6[0],toggleInProgress=_useState6[1];var build=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(name,symbol,supply,decimals){var provider,signer,contract,owner,tx,rc,event,_event$args,own,addr,newTokenAddress;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(inProgress){_context.next=29;break;}_context.prev=1;provider=new ethers.providers.Web3Provider(window.ethereum,\"any\");_context.next=5;return provider.send(\"eth_requestAccounts\",[]);case 5:signer=provider.getSigner();contract=new ethers.Contract(contractAddress,CustomERC20Builder.abi,signer);_context.next=9;return signer.getAddress();case 9:owner=_context.sent;_context.next=12;return contract.buildERC20(owner,supply,name,symbol,decimals,{\"value\":ethers.utils.parseEther(\"0.001\")});case 12:tx=_context.sent;toggleInProgress(true);_context.next=16;return tx.wait();case 16:rc=_context.sent;event=rc.events.find(function(event){return event.event==='TokenDeployment';});_event$args=_slicedToArray(event.args,2),own=_event$args[0],addr=_event$args[1];newTokenAddress=addr;setTokenAddress(newTokenAddress);toggleInProgress(false);navigate(\"/token-builder/dashboard\");_context.next=29;break;case 25:_context.prev=25;_context.t0=_context[\"catch\"](1);alert(\"Error: token not created\\n\"+_context.t0.message);toggleInProgress(false);case 29:case\"end\":return _context.stop();}}},_callee,null,[[1,25]]);}));return function build(_x,_x2,_x3,_x4){return _ref.apply(this,arguments);};}();var navigate=useNavigate();var handleReset=function handleReset(){setTokenAddress('');};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Token Builder\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Build your own ERC20 token on the Ethereum (Rinkeby) blockchain!\"}),/*#__PURE__*/_jsx(Link,{to:\"/token-builder/build\",children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",children:\"Create A Token\"})}),/*#__PURE__*/_jsx(Link,{to:\"/token-builder/dashboard\",children:/*#__PURE__*/_jsx(Button,{variant:\"secondary\",children:\"Token Dashboard\"})}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(_Fragment,{})}),/*#__PURE__*/_jsx(Route,{path:\"/token-builder/\",element:/*#__PURE__*/_jsx(_Fragment,{})}),/*#__PURE__*/_jsx(Route,{path:\"/token-builder/build\",element:/*#__PURE__*/_jsx(BuildForm,{onSubmit:build,inProgress:inProgress})}),/*#__PURE__*/_jsx(Route,{path:\"/token-builder/dashboard\",element:/*#__PURE__*/_jsx(DashboardCard,{tokenAddress:tokenAddress,setTokenAddress:setTokenAddress,tokenData:tokenData,setTokenData:setTokenData,reset:handleReset})})]})]});}export default App;","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/App.js"],"names":["logo","Routes","Route","Link","useNavigate","BuildForm","DashboardCard","ethers","useState","Button","CustomERC20Builder","contractAddress","App","tokenAddress","setTokenAddress","accountAddress","balance","name","symbol","decimals","tokenData","setTokenData","inProgress","toggleInProgress","build","supply","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","contract","Contract","abi","getAddress","owner","buildERC20","utils","parseEther","tx","wait","rc","event","events","find","args","own","addr","newTokenAddress","navigate","alert","message","handleReset"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport BuildForm from './Components/BuildForm.jsx';\nimport DashboardCard from './Components/DashboardCard'\nimport { ethers } from 'ethers';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport CustomERC20Builder from './artifacts/src/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nconst contractAddress = '0x96D998E65eBf1BFEdEEDaf59c8D63EC6E06175B9'; //Rinkeby\n\nfunction App() {\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [tokenData, setTokenData] = useState({\n    accountAddress: '',\n    balance: '',\n    name: '',\n    symbol: '',\n    decimals: ''\n  });\n  const [inProgress, toggleInProgress] = useState(false);\n\n  const build = async (name, symbol, supply, decimals) => {\n    if (!inProgress) {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n        const owner = await signer.getAddress();\n        const tx = await contract.buildERC20(owner, supply, name, symbol, decimals, {\"value\": ethers.utils.parseEther(\"0.001\")});\n        toggleInProgress(true);\n        const rc = await tx.wait();\n        const event = rc.events.find(event => event.event === 'TokenDeployment');\n        const [own, addr] = event.args;\n        const newTokenAddress = addr;\n        setTokenAddress(newTokenAddress);\n        toggleInProgress(false);\n        navigate(\"/token-builder/dashboard\");\n      } catch (e) {\n        alert(\"Error: token not created\\n\"+ e.message);\n        toggleInProgress(false);\n      }\n    }\n  }\n\n  const navigate = useNavigate();\n\n  const handleReset = () => {\n    setTokenAddress('');\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Token Builder</h1>\n      <h2>Build your own ERC20 token on the Ethereum (Rinkeby) blockchain!</h2>\n      <Link to=\"/token-builder/build\"><Button variant=\"primary\">Create A Token</Button></Link>\n      <Link to=\"/token-builder/dashboard\"><Button variant=\"secondary\">Token Dashboard</Button></Link>\n      <Routes>\n        <Route path=\"/\" element={<></>}/>\n        <Route path=\"/token-builder/\" element={<></>}/>\n        <Route path=\"/token-builder/build\" element={<BuildForm onSubmit={build} inProgress={inProgress}/>}/>\n        <Route path=\"/token-builder/dashboard\" element={<DashboardCard tokenAddress={tokenAddress} setTokenAddress={setTokenAddress} tokenData={tokenData} setTokenData={setTokenData} reset={handleReset}/>}/>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}