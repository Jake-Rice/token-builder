{"ast":null,"code":"var _jsxFileName = \"/Users/jake/workspace/token-builder/src/Components/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './dashboard.css';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst abi = [\"function balanceOf(address owner) view returns (uint256)\", \"function decimals() view returns (uint8)\", \"function name() view returns (string)\", \"function symbol() view returns (string)\", \"function transfer(address to, uint amount) returns (bool)\", \"function approve(address spender, uint256 amount) returns (bool)\", \"event Approval(address indexed owner, address indexed spender, uint256 value)\", \"event Transfer(address indexed from, address indexed to, uint amount)\"];\n\nconst Dashboard = props => {\n  _s();\n\n  const [tokenAddress, setTokenAddress] = useState('');\n  useEffect(() => {\n    if (props.tokenAddress !== '') {\n      verifyTokenAddress(props.tokenAddress);\n    }\n  }, []);\n  const [tokenAddressVerified, toggleTokenAddressVerified] = useState(tokenAddress !== '' ? true : false);\n  const [tokenData, setTokenData] = useState({\n    contract: {},\n    tokenAddress: '',\n    accountAddress: '',\n    balance: '',\n    name: '',\n    symbol: '',\n    decimals: ''\n  });\n  const [transferRecipient, setTransferRecipient] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [allowanceSpender, setAllowanceSpender] = useState('');\n  const [allowanceAmount, setAllowanceAmount] = useState('');\n  const [claimOwner, setClaimOwner] = useState('');\n  const [claimAmount, setClaimAmount] = useState('');\n  const [sendAllowance, setSendAllowance] = useState(false);\n  const [sendAddress, setSendAddress] = useState('');\n  useEffect(async () => {\n    if (tokenData.tokenAddress !== '') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const erc20 = new ethers.Contract(tokenData.tokenAddress, abi, signer);\n      const filterTo = erc20.filters.Transfer(null, signer.address);\n      erc20.once(filterTo, async (from, to, amount, event) => {\n        console.log(tokenData.tokenAddress);\n        setTokenData({ ...tokenData,\n          balance: await erc20.balanceOf(tokenData.accountAddress)\n        });\n      });\n    }\n  }, [tokenData]);\n\n  const verifyTokenAddress = async addr => {\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const erc20 = new ethers.Contract(addr, abi, signer);\n      const pUser = signer.getAddress();\n      const pName = erc20.name();\n      const pSymbol = erc20.symbol();\n      const pDecimals = erc20.decimals();\n      const [user, name, symbol, decimals] = await Promise.all([pUser, pName, pSymbol, pDecimals]);\n      const balance = await erc20.balanceOf(user);\n      setTokenData({\n        tokenAddress: addr,\n        accountAddress: user,\n        balance: balance.toString(),\n        name: name,\n        symbol: symbol,\n        decimals: decimals\n      });\n      toggleTokenAddressVerified(true);\n    } catch (e) {\n      console.error(e);\n      alert('Error: Token address invalid.');\n    }\n  };\n\n  const transferTokens = async (recipient, amount) => {\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const erc20 = new ethers.Contract(tokenData.tokenAddress, abi, signer);\n      const sender = await signer.getAddress();\n      const balance = await erc20.balanceOf(sender);\n      const decimals = await erc20.decimals();\n      const success = await erc20.transfer(recipient, parseAmount(amount, decimals));\n      console.log(success);\n    } catch (e) {\n      console.error(e);\n      alert('Error: Transfer failed.');\n    }\n  };\n\n  const setTokenAllowance = async (recipient, amount) => {\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const erc20 = new ethers.Contract(tokenData.tokenAddress, abi, signer);\n      const sender = await signer.getAddress();\n      const balance = await erc20.balanceOf(sender);\n      const decimals = await erc20.decimals();\n      let success = false;\n\n      if (balance >= parseAmount(amount, decimals)) {\n        success = await erc20.approve(recipient, parseAmount(amount, decimals));\n      } else alert('Error: Insufficient balance.');\n\n      const allowance = await erc20.allowance(sender, recipient);\n    } catch (e) {\n      console.error(e);\n      alert('Error: Allowance failed.');\n    }\n  };\n\n  const transferAllowance = async (owner, recipient, amount) => {\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const erc20 = new ethers.Contract(tokenData.tokenAddress, abi, signer);\n      const spender = await signer.getAddress();\n      const balance = await erc20.balanceOf(owner);\n      const allowance = await erc20.allowance(owner, spender);\n      const decimals = await erc20.decimals();\n      let success = false;\n\n      if (balance >= parseAmount(amount, decimals)) {\n        success = await erc20.transferFrom(owner, recipient, parseAmount(amount, decimals));\n      }\n\n      console.log(success);\n    } catch (e) {\n      console.error(e);\n      alert('Error: Transfer failed.');\n    }\n  };\n\n  const formatBalance = (balance, dec) => {\n    if (dec === 0) return balance;\n    let bal = balance;\n\n    while (bal.length <= dec) bal = '0' + bal;\n\n    bal = bal.slice(0, 0 - dec) + '.' + bal.slice(0 - dec);\n\n    while (bal[bal.length - 1] === '0') bal = bal.slice(0, -1);\n\n    if (bal[bal.length - 1] === '.') bal = bal.slice(0, -1);\n    return bal;\n  };\n\n  const parseAmount = (amt, dec) => {\n    let amount = amt;\n\n    if (amount.indexOf('.') < 0) {\n      for (let i = 0; i < dec; i++) {\n        amount = amount + '0';\n      }\n\n      return amount;\n    }\n\n    while (amount.length - amount.indexOf('.') <= dec) amount = amount + '0';\n\n    if (amount.length - amount.indexOf('.') > dec + 1) amount = amount.slice(0, amount.indexOf('.') + dec);\n    return amount.slice(0, amount.indexOf('.')) + amount.slice(amount.indexOf('.') + 1);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const startTime = Date.now();\n    await verifyTokenAddress(tokenAddress).then(() => {\n      console.log(\"Ran in \" + (Date.now() - startTime) + \"ms\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: tokenAddressVerified ? /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Token Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Token Address: \", tokenData.tokenAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Token Name: \", tokenData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Token Symbol: \", tokenData.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Account Address: \", tokenData.accountAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Token Balance: \", formatBalance(tokenData.balance.toString(), tokenData.decimals), \" \", tokenData.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transfer Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recipient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-input\",\n          value: transferRecipient,\n          onChange: event => setTransferRecipient(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 143\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: transferAmount,\n          onChange: event => setTransferAmount(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          variant: \"danger\",\n          onClick: () => transferTokens(transferRecipient, transferAmount),\n          children: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Set Token Allowance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Spender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-input\",\n          value: allowanceSpender,\n          onChange: event => setAllowanceSpender(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 141\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: allowanceAmount,\n          onChange: event => setAllowanceAmount(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          variant: \"danger\",\n          onClick: () => setTokenAllowance(allowanceSpender, allowanceAmount),\n          children: \"Set Allowance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Claim Allowance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Owner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-input\",\n          value: claimOwner,\n          onChange: event => setClaimOwner(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 129\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: claimAmount,\n          onChange: event => setClaimAmount(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          variant: \"danger\",\n          onClick: () => transferAllowance(claimOwner, sendAllowance ? sendAddress : tokenData.accountAddress, claimAmount),\n          children: sendAllowance ? \"Send Allowance\" : \"Claim Allowance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: sendAllowance,\n            onChange: () => setSendAllowance(!sendAllowance)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 32\n          }, this), \" Send to another address\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), sendAllowance && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Destination address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-input\",\n            value: sendAddress,\n            onChange: event => setSendAddress(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row btn-row\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => {\n              setTokenAddress('');\n              toggleTokenAddressVerified(false);\n            },\n            children: \"Use a Different Token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Token Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: tokenAddress,\n          className: \"text-input\",\n          onChange: event => setTokenAddress(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 75\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row btn-row\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Get Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"EFb5BUZjkFPEmWj5r1riuEGyBjo=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/Components/Dashboard.jsx"],"names":["React","useState","useEffect","ethers","Link","Card","Form","Button","abi","Dashboard","props","tokenAddress","setTokenAddress","verifyTokenAddress","tokenAddressVerified","toggleTokenAddressVerified","tokenData","setTokenData","contract","accountAddress","balance","name","symbol","decimals","transferRecipient","setTransferRecipient","transferAmount","setTransferAmount","allowanceSpender","setAllowanceSpender","allowanceAmount","setAllowanceAmount","claimOwner","setClaimOwner","claimAmount","setClaimAmount","sendAllowance","setSendAllowance","sendAddress","setSendAddress","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","erc20","Contract","filterTo","filters","Transfer","address","once","from","to","amount","event","console","log","balanceOf","addr","pUser","getAddress","pName","pSymbol","pDecimals","user","Promise","all","toString","e","error","alert","transferTokens","recipient","sender","success","transfer","parseAmount","setTokenAllowance","approve","allowance","transferAllowance","owner","spender","transferFrom","formatBalance","dec","bal","length","slice","amt","indexOf","i","handleSubmit","preventDefault","startTime","Date","now","then","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers'\nimport './dashboard.css';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\n\nconst abi = [\n    \"function balanceOf(address owner) view returns (uint256)\",\n    \"function decimals() view returns (uint8)\",\n    \"function name() view returns (string)\",\n    \"function symbol() view returns (string)\",\n    \"function transfer(address to, uint amount) returns (bool)\",\n    \"function approve(address spender, uint256 amount) returns (bool)\",\n    \"event Approval(address indexed owner, address indexed spender, uint256 value)\",\n    \"event Transfer(address indexed from, address indexed to, uint amount)\"\n];\n\nconst Dashboard = (props) => {\n    const [tokenAddress, setTokenAddress] = useState('');\n    useEffect(() => {\n        if (props.tokenAddress !== '') {\n            verifyTokenAddress(props.tokenAddress);\n        }\n    }, [])\n\n    const [tokenAddressVerified, toggleTokenAddressVerified] = useState((tokenAddress !== '') ? true : false);\n    \n    const [tokenData, setTokenData] = useState({\n        contract: {},\n        tokenAddress: '',\n        accountAddress: '',\n        balance: '',\n        name: '',\n        symbol: '',\n        decimals: ''\n    });\n\n    const [transferRecipient, setTransferRecipient] = useState('');\n    const [transferAmount, setTransferAmount] = useState('');\n\n    const [allowanceSpender, setAllowanceSpender] = useState('');\n    const [allowanceAmount, setAllowanceAmount] = useState('');\n\n    const [claimOwner, setClaimOwner] = useState('');\n    const [claimAmount, setClaimAmount] = useState('');\n    const [sendAllowance, setSendAllowance] = useState(false);\n    const [sendAddress, setSendAddress] = useState('');\n\n    useEffect(async () => {\n        if (tokenData.tokenAddress !== '') {\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            await provider.send(\"eth_requestAccounts\", []);\n            const signer = provider.getSigner();\n            const erc20 = new ethers.Contract(tokenData.tokenAddress, abi, signer);\n            const filterTo = erc20.filters.Transfer(null, signer.address);\n            erc20.once(filterTo, async (from, to, amount, event) => {\n                console.log(tokenData.tokenAddress);\n                setTokenData({...tokenData, balance: await erc20.balanceOf(tokenData.accountAddress)});\n            });\n        }\n    }, [tokenData]);\n\n    const verifyTokenAddress = async (addr) => {\n        try {\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            await provider.send(\"eth_requestAccounts\", []);\n            const signer = provider.getSigner();\n            \n            const erc20 = new ethers.Contract(addr, abi, signer);\n            const pUser = signer.getAddress();\n            const pName = erc20.name();\n            const pSymbol = erc20.symbol();\n            const pDecimals = erc20.decimals();\n            const [user, name, symbol, decimals] = await Promise.all([pUser, pName, pSymbol, pDecimals]);\n            const balance = await erc20.balanceOf(user);\n            setTokenData({\n                tokenAddress: addr,\n                accountAddress: user,\n                balance: balance.toString(),\n                name: name,\n                symbol: symbol,\n                decimals: decimals\n            });\n            toggleTokenAddressVerified(true);\n        } catch (e) { \n            console.error(e);\n            alert('Error: Token address invalid.');\n        }\n    }\n\n    const transferTokens = async (recipient, amount) => {\n        try {\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            await provider.send(\"eth_requestAccounts\", []);\n            const signer = provider.getSigner();\n            const erc20 = new ethers.Contract(tokenData.tokenAddress, abi, signer);\n            const sender = await signer.getAddress();\n            const balance = await erc20.balanceOf(sender);\n            const decimals = await erc20.decimals();\n            const success = await erc20.transfer(recipient, parseAmount(amount, decimals));\n            console.log(success);\n        } catch (e) { \n            console.error(e);\n            alert('Error: Transfer failed.');\n        }\n    }\n\n    const setTokenAllowance = async (recipient, amount) => {\n        try {\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            await provider.send(\"eth_requestAccounts\", []);\n            const signer = provider.getSigner();\n            const erc20 = new ethers.Contract(tokenData.tokenAddress, abi, signer);\n            const sender = await signer.getAddress();\n            const balance = await erc20.balanceOf(sender);\n            const decimals = await erc20.decimals();\n            let success = false;\n            if (balance >= parseAmount(amount, decimals)) {\n                success = await erc20.approve(recipient, parseAmount(amount, decimals));\n            }\n            else alert('Error: Insufficient balance.');\n            const allowance = await erc20.allowance(sender, recipient);\n        } catch (e) { \n            console.error(e);\n            alert('Error: Allowance failed.');\n        }\n    }\n\n    const transferAllowance = async (owner, recipient, amount) => {\n        try {\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            await provider.send(\"eth_requestAccounts\", []);\n            const signer = provider.getSigner();\n            const erc20 = new ethers.Contract(tokenData.tokenAddress, abi, signer);\n            const spender = await signer.getAddress();\n            const balance = await erc20.balanceOf(owner);\n            const allowance = await erc20.allowance(owner, spender)\n            const decimals = await erc20.decimals();\n            let success = false;\n            if (balance >= parseAmount(amount, decimals) ) {\n                success = await erc20.transferFrom(owner, recipient, parseAmount(amount, decimals));\n            }\n            console.log(success);\n        } catch (e) { \n            console.error(e);\n            alert('Error: Transfer failed.');\n        }\n    }\n\n    const formatBalance = (balance, dec) => {\n        if (dec === 0) return balance;\n        let bal = balance;\n        while (bal.length <= dec) bal = '0'+bal;\n        bal = bal.slice(0,0-dec)+'.'+bal.slice(0-dec);\n        while (bal[bal.length-1] === '0') bal = bal.slice(0,-1);\n        if (bal[bal.length-1] === '.') bal = bal.slice(0,-1);\n        return bal;\n    }\n\n    const parseAmount = (amt, dec) => {\n        let amount = amt;\n        if (amount.indexOf('.') < 0) {\n            for (let i=0; i<dec; i++) {\n                amount=amount+'0';\n            }\n            return amount;\n        }\n        while (amount.length-amount.indexOf('.') <= dec) amount=amount+'0';\n        if (amount.length-amount.indexOf('.') > dec+1) amount = amount.slice(0,amount.indexOf('.')+dec);\n        return amount.slice(0,amount.indexOf('.'))+amount.slice(amount.indexOf('.')+1);\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const startTime = Date.now();\n        await verifyTokenAddress(tokenAddress).then(() => {\n            console.log(\"Ran in \" + (Date.now() - startTime) + \"ms\");\n        });\n    }\n\n    return (\n        <Card>\n            {tokenAddressVerified ?\n                <Form>\n                    <h3>Token Info</h3>\n                    <div className=\"form-row\"><label>Token Address: {tokenData.tokenAddress}</label></div>\n                    <div className=\"form-row\"><label>Token Name: {tokenData.name}</label></div>\n                    <div className=\"form-row\"><label>Token Symbol: {tokenData.symbol}</label></div>\n                    <div className=\"form-row\"><label>Account Address: {tokenData.accountAddress}</label></div>\n                    <div className=\"form-row\"><label>Token Balance: {formatBalance(tokenData.balance.toString(), tokenData.decimals)} {tokenData.symbol}</label></div>\n                    <h3>Transfer Tokens</h3>\n                    <div className=\"form-row\">\n                        <label>Recipient</label>\n                        <input className=\"text-input\" value={transferRecipient} onChange={(event)=>setTransferRecipient(event.target.value)}/><br/>\n                        <label>Amount</label>\n                        <input type=\"number\" value={transferAmount} onChange={(event)=>setTransferAmount(event.target.value)}/>\n                        <Button size=\"sm\" variant=\"danger\" onClick={() => transferTokens(transferRecipient, transferAmount)}>Transfer</Button>\n                    </div>\n                    <h3>Set Token Allowance</h3>\n                    <div className=\"form-row\">\n                        <label>Spender</label>\n                        <input className=\"text-input\" value={allowanceSpender} onChange={(event)=>setAllowanceSpender(event.target.value)}/><br/>\n                        <label>Amount</label>\n                        <input type=\"number\" value={allowanceAmount} onChange={(event)=>setAllowanceAmount(event.target.value)}/>\n                        <Button size=\"sm\" variant=\"danger\" onClick={() => setTokenAllowance(allowanceSpender, allowanceAmount)}>Set Allowance</Button>\n                    </div>\n                    <h3>Claim Allowance</h3>\n                    <div className=\"form-row\">\n                        <label>Owner</label>\n                        <input className=\"text-input\" value={claimOwner} onChange={(event)=>setClaimOwner(event.target.value)}/><br/>\n                        <label>Amount</label>\n                        <input type=\"number\" value={claimAmount} onChange={(event)=>setClaimAmount(event.target.value)}/>\n                        <Button size=\"sm\" variant=\"danger\" onClick={() => transferAllowance(claimOwner, (sendAllowance ? sendAddress : tokenData.accountAddress), claimAmount)}>{sendAllowance ? \"Send Allowance\" : \"Claim Allowance\"}</Button>\n                        <label><input type=\"checkbox\" checked={sendAllowance} onChange={()=>setSendAllowance(!sendAllowance)}/> Send to another address</label>\n                        {sendAllowance &&\n                            <div>\n                                <label>Destination address</label>\n                                <input className=\"text-input\" value={sendAddress} onChange={(event)=>setSendAddress(event.target.value)}/>\n                            </div>}\n                    </div>\n                    <div className=\"form-row btn-row\">\n                        <Link to=\"/dashboard\">\n                            <Button variant=\"secondary\" onClick={() => {\n                                setTokenAddress('');\n                                toggleTokenAddressVerified(false);\n                            }}>Use a Different Token</Button>\n                        </Link>\n                    </div>\n                </Form>\n                :\n                <Form onSubmit={handleSubmit}>\n                    <div className=\"form-row\"><label>Token Address</label><input type=\"text\" value={tokenAddress} className=\"text-input\" onChange={(event)=>setTokenAddress(event.target.value)}/></div>\n                    <div className=\"form-row btn-row\"><Button variant=\"primary\" onClick={handleSubmit}>Get Token</Button></div>\n                </Form>\n            }\n        </Card>\n    );\n}\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}