{"ast":null,"code":"var _jsxFileName = \"/Users/jake/workspace/token-builder/src/Components/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './dashboard.css';\nimport { Link } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport abi from './abi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rxAddress = /^0x[a-fA-F0-9]{40}$/;\n\nconst Dashboard = props => {\n  _s();\n\n  const [transferRecipient, setTransferRecipient] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [allowanceSpender, setAllowanceSpender] = useState('');\n  const [allowanceAmount, setAllowanceAmount] = useState('');\n  const [allowanceAvailable, setAllowanceAvailable] = useState('');\n  const [validAllowance, setValidAllowance] = useState(false);\n  const [claimOwner, setClaimOwner] = useState('');\n  const [claimAmount, setClaimAmount] = useState('');\n  const [sendAllowance, setSendAllowance] = useState(false);\n  const [sendAddress, setSendAddress] = useState('');\n  useEffect(async () => {\n    if (rxAddress.test(claimOwner)) {\n      const decimals = await props.web3.contract.decimals();\n\n      try {\n        const _allowance = await props.web3.contract.allowance(claimOwner, await props.web3.signer.getAddress());\n\n        setAllowanceAvailable(formatBalance(_allowance.toString(), decimals));\n        setValidAllowance(true);\n      } catch (err) {\n        console.error(err);\n      }\n    } else setValidAllowance(false);\n  }, [claimOwner]);\n  useEffect(async () => {\n    if (props.tokenData.accountAddress) {\n      // transfer()\n      const filter = props.web3.contract.filters.Transfer(props.tokenData.accountAddress);\n      props.web3.contract.on(filter, async (from, to, amount, event) => {\n        console.log(\"transfer!\");\n        const bal = await props.web3.contract.balanceOf(props.tokenData.accountAddress);\n        props.updateTokenData({ ...props.tokenData,\n          balance: bal.toString()\n        });\n      }); // transferFrom()\n\n      const filter2 = props.web3.contract.filters.Transfer(null, props.tokenData.accountAddress);\n      props.web3.contract.on(filter2, async (from, to, amount, event) => {\n        console.log(\"transferFrom!\");\n        const bal = await props.web3.contract.balanceOf(props.tokenData.accountAddress);\n        const dec = await props.web3.contract.decimals();\n        props.updateTokenData({ ...props.tokenData,\n          balance: bal.toString()\n        });\n\n        const _allowance = await props.web3.contract.allowance(from, to);\n\n        setAllowanceAvailable(formatBalance(_allowance.toString(), dec));\n      });\n    }\n\n    return () => {\n      props.web3.contract.removeAllListeners();\n    };\n  }, [props.tokenData.accountAddress]);\n  useEffect(async () => {\n    const erc20 = new ethers.Contract(props.tokenAddress, abi, props.web3.signer);\n    const pUser = props.web3.signer.getAddress();\n    const pName = erc20.name();\n    const pSymbol = erc20.symbol();\n    const pDecimals = erc20.decimals();\n    const [user, name, symbol, decimals] = await Promise.all([pUser, pName, pSymbol, pDecimals]);\n    const balance = await erc20.balanceOf(user);\n    props.updateTokenData({\n      accountAddress: user,\n      balance: balance.toString(),\n      name: name,\n      symbol: symbol,\n      decimals: decimals\n    });\n    props.web3.provider.provider.on(\"accountsChanged\", async () => {\n      const signer = props.web3.provider.getSigner();\n      const pUser = signer.getAddress();\n      const pName = props.web3.contract.name();\n      const pSymbol = props.web3.contract.symbol();\n      const pDecimals = props.web3.contract.decimals();\n      const [user, name, symbol, decimals] = await Promise.all([pUser, pName, pSymbol, pDecimals]);\n      console.log(user);\n      const balance = await props.web3.contract.balanceOf(user);\n      props.updateTokenData({\n        accountAddress: user,\n        balance: balance.toString(),\n        name: name,\n        symbol: symbol,\n        decimals: decimals\n      });\n    });\n  }, []);\n\n  const transferTokens = async (recipient, amount) => {\n    try {\n      const decimals = await props.web3.contract.decimals();\n      await props.web3.contract.transfer(recipient, parseAmount(amount, decimals));\n    } catch (e) {\n      console.error(e);\n      alert('Error: Transfer failed.');\n    }\n  };\n\n  const setTokenAllowance = async (recipient, amount) => {\n    try {\n      const sender = await props.web3.signer.getAddress();\n      const balance = await props.web3.contract.balanceOf(sender);\n      const decimals = await props.web3.contract.decimals();\n\n      if (balance >= formatBalance(amount, decimals)) {\n        await props.web3.contract.approve(recipient, parseAmount(amount, decimals));\n      } else alert(\"Error: Insufficient balance.\");\n    } catch (e) {\n      console.error(e);\n      alert('Error: Allowance failed.');\n    }\n  };\n\n  const transferAllowance = async (owner, recipient, amount) => {\n    try {\n      const balance = await props.web3.contract.balanceOf(owner);\n      const decimals = await props.web3.contract.decimals();\n\n      if (balance >= formatBalance(amount, decimals)) {\n        await props.web3.contract.transferFrom(owner, recipient, parseAmount(amount, decimals));\n      }\n    } catch (e) {\n      console.error(e);\n      alert('Error: Transfer failed.');\n    }\n  };\n\n  const formatBalance = (balance, dec) => {\n    if (dec === 0) return balance;\n    let bal = balance;\n\n    while (bal.length <= dec) bal = '0' + bal;\n\n    bal = bal.slice(0, 0 - dec) + '.' + bal.slice(0 - dec);\n\n    while (bal[bal.length - 1] === '0') bal = bal.slice(0, -1);\n\n    if (bal[bal.length - 1] === '.') bal = bal.slice(0, -1);\n    return bal;\n  };\n\n  const parseAmount = (amt, dec) => {\n    let amount = amt;\n\n    if (amount.indexOf('.') < 0) {\n      for (let i = 0; i < dec; i++) {\n        amount = amount + '0';\n      }\n\n      return amount;\n    }\n\n    while (amount.length - amount.indexOf('.') <= dec) amount = amount + '0';\n\n    if (amount.length - amount.indexOf('.') > dec + 1) amount = amount.slice(0, amount.indexOf('.') + dec);\n    return amount.slice(0, amount.indexOf('.')) + amount.slice(amount.indexOf('.') + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Token Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Token Address: \", props.tokenAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Token Name: \", props.tokenData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Token Symbol: \", props.tokenData.symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Account Address: \", props.tokenData.accountAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Token Balance: \", formatBalance(props.tokenData.balance.toString(), props.tokenData.decimals), \" \", props.tokenData.symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Transfer Tokens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Recipient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"text-input\",\n        value: transferRecipient,\n        onChange: event => setTransferRecipient(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 135\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: transferAmount,\n        onChange: event => setTransferAmount(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        variant: \"danger\",\n        onClick: () => transferTokens(transferRecipient, transferAmount),\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Set Token Allowance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Spender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"text-input\",\n        value: allowanceSpender,\n        onChange: event => setAllowanceSpender(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 133\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: allowanceAmount,\n        onChange: event => setAllowanceAmount(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        variant: \"danger\",\n        onClick: () => setTokenAllowance(allowanceSpender, allowanceAmount),\n        children: \"Set Allowance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Claim Allowance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Owner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"text-input\",\n        value: claimOwner,\n        onChange: event => setClaimOwner(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 121\n      }, this), validAllowance && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Available Allowance: \", allowanceAvailable, \" \", props.tokenData.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 122\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: claimAmount,\n        onChange: event => setClaimAmount(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        variant: \"danger\",\n        onClick: () => transferAllowance(claimOwner, sendAllowance ? sendAddress : props.tokenData.accountAddress, claimAmount),\n        children: sendAllowance ? \"Send Allowance\" : \"Claim Allowance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row btn-row\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/token-builder/dashboard\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: props.reset,\n          children: \"Use a Different Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"UzNQfJXjVJvHkHc6OzMoFYK6cJE=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/Components/Dashboard.jsx"],"names":["React","useState","useEffect","ethers","Link","Form","Button","abi","rxAddress","Dashboard","props","transferRecipient","setTransferRecipient","transferAmount","setTransferAmount","allowanceSpender","setAllowanceSpender","allowanceAmount","setAllowanceAmount","allowanceAvailable","setAllowanceAvailable","validAllowance","setValidAllowance","claimOwner","setClaimOwner","claimAmount","setClaimAmount","sendAllowance","setSendAllowance","sendAddress","setSendAddress","test","decimals","web3","contract","_allowance","allowance","signer","getAddress","formatBalance","toString","err","console","error","tokenData","accountAddress","filter","filters","Transfer","on","from","to","amount","event","log","bal","balanceOf","updateTokenData","balance","filter2","dec","removeAllListeners","erc20","Contract","tokenAddress","pUser","pName","name","pSymbol","symbol","pDecimals","user","Promise","all","provider","getSigner","transferTokens","recipient","transfer","parseAmount","e","alert","setTokenAllowance","sender","approve","transferAllowance","owner","transferFrom","length","slice","amt","indexOf","i","target","value","reset"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers'\nimport './dashboard.css';\nimport { Link } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\nimport abi from './abi'\n\nconst rxAddress = /^0x[a-fA-F0-9]{40}$/;\n\nconst Dashboard = (props) => {\n    const [transferRecipient, setTransferRecipient] = useState('');\n    const [transferAmount, setTransferAmount] = useState('');\n\n    const [allowanceSpender, setAllowanceSpender] = useState('');\n    const [allowanceAmount, setAllowanceAmount] = useState('');\n\n    const [allowanceAvailable, setAllowanceAvailable] = useState('');\n    const [validAllowance, setValidAllowance] = useState(false);\n\n    const [claimOwner, setClaimOwner] = useState('');\n    const [claimAmount, setClaimAmount] = useState('');\n    const [sendAllowance, setSendAllowance] = useState(false);\n    const [sendAddress, setSendAddress] = useState('');\n\n    useEffect(async () => {\n        if (rxAddress.test(claimOwner)) {\n            const decimals = await props.web3.contract.decimals();\n            try {\n                const _allowance = await props.web3.contract.allowance(claimOwner, await props.web3.signer.getAddress());\n                setAllowanceAvailable(formatBalance(_allowance.toString(), decimals));\n                setValidAllowance(true);\n            } catch(err) {\n                console.error(err);\n            }\n        }\n        else setValidAllowance(false);\n    }, [claimOwner]);\n\n    useEffect(async () => {\n        if (props.tokenData.accountAddress) {\n            // transfer()\n            const filter = props.web3.contract.filters.Transfer(props.tokenData.accountAddress);\n            props.web3.contract.on(filter, async (from, to, amount, event) => {\n                console.log(\"transfer!\")\n                const bal = await props.web3.contract.balanceOf(props.tokenData.accountAddress);\n                props.updateTokenData({...props.tokenData, balance: bal.toString()});\n            });\n            // transferFrom()\n            const filter2 = props.web3.contract.filters.Transfer(null, props.tokenData.accountAddress);\n            props.web3.contract.on(filter2, async (from, to, amount, event) => {\n                console.log(\"transferFrom!\")\n                const bal = await props.web3.contract.balanceOf(props.tokenData.accountAddress);\n                const dec = await props.web3.contract.decimals();\n                props.updateTokenData({...props.tokenData, balance: bal.toString()});\n                const _allowance = await props.web3.contract.allowance(from, to);\n                setAllowanceAvailable(formatBalance(_allowance.toString(), dec));\n            });\n        }\n        return (()=>{\n            props.web3.contract.removeAllListeners();\n        });\n    }, [props.tokenData.accountAddress]);\n\n    useEffect(async () => {\n        const erc20 = new ethers.Contract(props.tokenAddress, abi, props.web3.signer)\n        const pUser = props.web3.signer.getAddress();\n        const pName = erc20.name();\n        const pSymbol = erc20.symbol();\n        const pDecimals = erc20.decimals();\n        const [user, name, symbol, decimals] = await Promise.all([pUser, pName, pSymbol, pDecimals]);\n        const balance = await erc20.balanceOf(user);\n        props.updateTokenData({\n            accountAddress: user,\n            balance: balance.toString(),\n            name: name,\n            symbol: symbol,\n            decimals: decimals\n        });\n        props.web3.provider.provider.on(\"accountsChanged\", async () => {\n            const signer = props.web3.provider.getSigner();\n            const pUser = signer.getAddress();\n            const pName = props.web3.contract.name();\n            const pSymbol = props.web3.contract.symbol();\n            const pDecimals = props.web3.contract.decimals();\n            const [user, name, symbol, decimals] = await Promise.all([pUser, pName, pSymbol, pDecimals]);\n            console.log(user);\n            const balance = await props.web3.contract.balanceOf(user);\n            props.updateTokenData({\n                accountAddress: user,\n                balance: balance.toString(),\n                name: name,\n                symbol: symbol,\n                decimals: decimals\n            });\n        });\n    }, []);\n\n    const transferTokens = async (recipient, amount) => {\n        try {\n            const decimals = await props.web3.contract.decimals();\n            await props.web3.contract.transfer(recipient, parseAmount(amount, decimals));\n        } catch (e) { \n            console.error(e);\n            alert('Error: Transfer failed.');\n        }\n    }\n\n    const setTokenAllowance = async (recipient, amount) => {\n        try {\n            const sender = await props.web3.signer.getAddress();\n            const balance = await props.web3.contract.balanceOf(sender);\n            const decimals = await props.web3.contract.decimals();\n            if (balance >= formatBalance(amount, decimals)) {\n                await props.web3.contract.approve(recipient, parseAmount(amount, decimals));\n            }\n            else alert(\"Error: Insufficient balance.\")\n        } catch (e) { \n            console.error(e);\n            alert('Error: Allowance failed.');\n        }\n    }\n\n    const transferAllowance = async (owner, recipient, amount) => {\n        try {\n            const balance = await props.web3.contract.balanceOf(owner);\n            const decimals = await props.web3.contract.decimals();\n            if (balance >= formatBalance(amount, decimals) ) {\n                await props.web3.contract.transferFrom(owner, recipient, parseAmount(amount, decimals));\n            }\n        } catch (e) { \n            console.error(e);\n            alert('Error: Transfer failed.');\n        }\n    }\n\n    const formatBalance = (balance, dec) => {\n        if (dec === 0) return balance;\n        let bal = balance;\n        while (bal.length <= dec) bal = '0'+bal;\n        bal = bal.slice(0,0-dec)+'.'+bal.slice(0-dec);\n        while (bal[bal.length-1] === '0') bal = bal.slice(0,-1);\n        if (bal[bal.length-1] === '.') bal = bal.slice(0,-1);\n        return bal;\n    }\n\n    const parseAmount = (amt, dec) => {\n        let amount = amt;\n        if (amount.indexOf('.') < 0) {\n            for (let i=0; i<dec; i++) {\n                amount=amount+'0';\n            }\n            return amount;\n        }\n        while (amount.length-amount.indexOf('.') <= dec) amount=amount+'0';\n        if (amount.length-amount.indexOf('.') > dec+1) amount = amount.slice(0,amount.indexOf('.')+dec);\n        return amount.slice(0,amount.indexOf('.'))+amount.slice(amount.indexOf('.')+1);\n    }\n\n    return (\n        <Form>\n            <h3>Token Info</h3>\n            <div className=\"form-row\"><label>Token Address: {props.tokenAddress}</label></div>\n            <div className=\"form-row\"><label>Token Name: {props.tokenData.name}</label></div>\n            <div className=\"form-row\"><label>Token Symbol: {props.tokenData.symbol}</label></div>\n            <div className=\"form-row\"><label>Account Address: {props.tokenData.accountAddress}</label></div>\n            <div className=\"form-row\"><label>Token Balance: {formatBalance(props.tokenData.balance.toString(), props.tokenData.decimals)} {props.tokenData.symbol}</label></div>\n            <hr/>\n            <h3>Transfer Tokens</h3>\n            <div className=\"form-row\">\n                <label>Recipient</label>\n                <input className=\"text-input\" value={transferRecipient} onChange={(event)=>setTransferRecipient(event.target.value)}/><br/>\n                <label>Amount</label>\n                <input type=\"number\" value={transferAmount} onChange={(event)=>setTransferAmount(event.target.value)}/>\n                <Button size=\"sm\" variant=\"danger\" onClick={() => transferTokens(transferRecipient, transferAmount)}>Transfer</Button>\n            </div>\n            <hr/>\n            <h3>Set Token Allowance</h3>\n            <div className=\"form-row\">\n                <label>Spender</label>\n                <input className=\"text-input\" value={allowanceSpender} onChange={(event)=>setAllowanceSpender(event.target.value)}/><br/>\n                <label>Amount</label>\n                <input type=\"number\" value={allowanceAmount} onChange={(event)=>setAllowanceAmount(event.target.value)}/>\n                <Button size=\"sm\" variant=\"danger\" onClick={() => setTokenAllowance(allowanceSpender, allowanceAmount)}>Set Allowance</Button>\n            </div>\n            <hr/>\n            <h3>Claim Allowance</h3>\n            <div className=\"form-row\">\n                <label>Owner</label>\n                <input className=\"text-input\" value={claimOwner} onChange={(event)=>setClaimOwner(event.target.value)}/><br/>\n                {validAllowance && <div><label>Available Allowance: {allowanceAvailable} {props.tokenData.symbol}</label><br/></div>}\n                <label>Amount</label>\n                <input type=\"number\" value={claimAmount} onChange={(event)=>setClaimAmount(event.target.value)}/>\n                <Button size=\"sm\" variant=\"danger\" onClick={() => transferAllowance(claimOwner, (sendAllowance ? sendAddress : props.tokenData.accountAddress), claimAmount)}>{sendAllowance ? \"Send Allowance\" : \"Claim Allowance\"}</Button>\n                {/*<label><input type=\"checkbox\" checked={sendAllowance} onChange={()=>setSendAllowance(!sendAllowance)}/> Send to another address</label>*/}\n                {/*sendAllowance &&\n                    <div>\n                        <label>Destination address</label>\n                        <input className=\"text-input\" value={sendAddress} onChange={(event)=>setSendAddress(event.target.value)}/>\n                    </div>*/}\n            </div>\n            <div className=\"form-row btn-row\">\n                <Link to=\"/token-builder/dashboard\">\n                    <Button variant=\"secondary\" onClick={props.reset}>Use a Different Token</Button>\n                </Link>\n            </div>\n        </Form>\n    )\n}\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}