{"ast":null,"code":"var _jsxFileName = \"/Users/jake/workspace/token-builder/src/Components/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport './dashboard.css';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = props => {\n  _s();\n\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [tokenAddressVerified, toggleTokenAddressVerified] = useState(false);\n  const [tokenData, setTokenData] = useState({\n    tokenAddress: '',\n    accountAddress: '',\n    balance: '',\n    name: '',\n    symbol: '',\n    decimals: ''\n  });\n  const [transferRecipient, setTransferRecipient] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [allowanceSpender, setAllowanceSpender] = useState('');\n  const [allowanceAmount, setAllowanceAmount] = useState('');\n  const [claimOwner, setClaimOwner] = useState('');\n  const [claimAmount, setClaimAmount] = useState('');\n  const [sendAllowance, setSendAllowance] = useState(false);\n  const [sendAddress, setSendAddress] = useState('');\n\n  const verifyTokenAddress = async addr => {\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const abi = [\"function balanceOf(address owner) view returns (uint256)\", \"function decimals() view returns (uint8)\", \"function name() view returns (string)\", \"function symbol() view returns (string)\", \"function transfer(address to, uint amount) returns (bool)\", \"event Transfer(address indexed from, address indexed to, uint amount)\"];\n      const erc20 = new ethers.Contract(addr, abi, signer);\n      const user = await signer.getAddress();\n      const balance = await erc20.balanceOf(user);\n      const name = await erc20.name();\n      const symbol = await erc20.symbol();\n      const decimals = await erc20.decimals();\n      setTokenData({\n        tokenAddress: addr,\n        accountAddress: user,\n        balance: balance.toString(),\n        name: name,\n        symbol: symbol,\n        decimals: decimals\n      });\n      toggleTokenAddressVerified(true);\n    } catch (e) {\n      console.error(e);\n      alert('Error: Token address invalid.');\n    }\n  };\n\n  const formatBalance = (balance, dec) => {\n    let bal = balance;\n\n    while (bal.length <= dec) bal = '0' + bal;\n\n    bal = bal.slice(0, -dec) + '.' + bal.slice(-dec);\n\n    while (bal[bal.length - 1] === '0') bal = bal.slice(0, -1);\n\n    if (bal[bal.length - 1] === '.') bal = bal.slice(0, -1);\n    return bal;\n  };\n\n  const parseAmount = (amt, dec) => {\n    let amount = amt;\n\n    if (amount.indexOf('.') < 0) {\n      for (let i = 0; i < dec; i++) {\n        amount = amount + '0';\n      }\n\n      return amount;\n    }\n\n    while (amount.length - amount.indexOf('.') <= dec) amount = amount + '0';\n\n    if (amount.length - amount.indexOf('.') > dec + 1) amount = amount.slice(0, amount.indexOf('.') + dec);\n    return amount.slice(0, amount.indexOf('.')) + amount.slice(amount.indexOf('.') + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tokenAddressVerified ? /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Token Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Token Address: \", tokenData.tokenAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Token Name: \", tokenData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Token Symbol: \", tokenData.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Account Address: \", tokenData.accountAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Token Balance: \", formatBalance(tokenData.balance.toString(), tokenData.decimals), \" \", tokenData.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transfer Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recipient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-input\",\n          value: transferRecipient,\n          onChange: event => setTransferRecipient(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 143\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: transferAmount,\n          onChange: event => setTransferAmount(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Set Token Allowance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Spender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-input\",\n          value: allowanceSpender,\n          onChange: event => setAllowanceSpender(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 141\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: allowanceAmount,\n          onChange: event => setAllowanceAmount(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Set Allowance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Claim Allowance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Owner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-input\",\n          value: claimOwner,\n          onChange: event => setClaimOwner(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 129\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: claimAmount,\n          onChange: event => setClaimAmount(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 122\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Send to another address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: sendAllowance,\n          onChange: () => setSendAllowance(!sendAllowance)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), sendAllowance && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Destination address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-input\",\n            value: sendAddress,\n            onChange: event => setSendAddress(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: sendAllowance ? \"Send Allowance\" : \"Claim Allowance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row btn-row\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => {\n            setTokenAddress('');\n            toggleTokenAddressVerified(false);\n          },\n          children: \"Get Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Token Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: tokenAddress,\n          className: \"text-input\",\n          onChange: event => setTokenAddress(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 75\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row btn-row\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => verifyTokenAddress(tokenAddress),\n          children: \"Get Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"1FfNTzQbXrJht0gJ/WIC5VFEjJ8=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/Components/Dashboard.jsx"],"names":["React","useState","ethers","Button","Dashboard","props","tokenAddress","setTokenAddress","tokenAddressVerified","toggleTokenAddressVerified","tokenData","setTokenData","accountAddress","balance","name","symbol","decimals","transferRecipient","setTransferRecipient","transferAmount","setTransferAmount","allowanceSpender","setAllowanceSpender","allowanceAmount","setAllowanceAmount","claimOwner","setClaimOwner","claimAmount","setClaimAmount","sendAllowance","setSendAllowance","sendAddress","setSendAddress","verifyTokenAddress","addr","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","abi","erc20","Contract","user","getAddress","balanceOf","toString","e","console","error","alert","formatBalance","dec","bal","length","slice","parseAmount","amt","amount","indexOf","i","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { ethers } from 'ethers'\nimport './dashboard.css';\nimport Button from 'react-bootstrap/Button'\n\nconst Dashboard = (props) => {\n    const [tokenAddress, setTokenAddress] = useState('');\n    const [tokenAddressVerified, toggleTokenAddressVerified] = useState(false);\n    \n    const [tokenData, setTokenData] = useState({\n        tokenAddress: '',\n        accountAddress: '',\n        balance: '',\n        name: '',\n        symbol: '',\n        decimals: ''\n    });\n\n    const [transferRecipient, setTransferRecipient] = useState('');\n    const [transferAmount, setTransferAmount] = useState('');\n\n    const [allowanceSpender, setAllowanceSpender] = useState('');\n    const [allowanceAmount, setAllowanceAmount] = useState('');\n\n    const [claimOwner, setClaimOwner] = useState('');\n    const [claimAmount, setClaimAmount] = useState('');\n    const [sendAllowance, setSendAllowance] = useState(false);\n    const [sendAddress, setSendAddress] = useState('');\n\n    const verifyTokenAddress = async (addr) => {\n        try {\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            await provider.send(\"eth_requestAccounts\", []);\n            const signer = provider.getSigner();\n            const abi = [\n                \"function balanceOf(address owner) view returns (uint256)\",\n                \"function decimals() view returns (uint8)\",\n                \"function name() view returns (string)\",\n                \"function symbol() view returns (string)\",\n                \"function transfer(address to, uint amount) returns (bool)\",\n                \"event Transfer(address indexed from, address indexed to, uint amount)\"\n            ];\n            const erc20 = new ethers.Contract(addr, abi, signer);\n            const user = await signer.getAddress();\n            const balance = await erc20.balanceOf(user);\n            const name = await erc20.name();\n            const symbol = await erc20.symbol();\n            const decimals = await erc20.decimals();\n            setTokenData({\n                tokenAddress: addr,\n                accountAddress: user,\n                balance: balance.toString(),\n                name: name,\n                symbol: symbol,\n                decimals: decimals\n            });\n            toggleTokenAddressVerified(true);\n        } catch (e) { \n            console.error(e);\n            alert('Error: Token address invalid.');\n        }\n    }\n\n    const formatBalance = (balance, dec) => {\n        let bal = balance;\n        while (bal.length <= dec) bal = '0'+bal;\n        bal = bal.slice(0,-dec)+'.'+bal.slice(-dec);\n        while (bal[bal.length-1] === '0') bal = bal.slice(0,-1);\n        if (bal[bal.length-1] === '.') bal = bal.slice(0,-1);\n        return bal;\n    }\n\n    const parseAmount = (amt, dec) => {\n        let amount = amt;\n        if (amount.indexOf('.') < 0) {\n            for (let i=0; i<dec; i++) {\n                amount=amount+'0';\n            }\n            return amount;\n        }\n        while (amount.length-amount.indexOf('.') <= dec) amount=amount+'0';\n        if (amount.length-amount.indexOf('.') > dec+1) amount = amount.slice(0,amount.indexOf('.')+dec);\n        return amount.slice(0,amount.indexOf('.'))+amount.slice(amount.indexOf('.')+1);\n    }\n\n    return (\n        <div>\n            {tokenAddressVerified ?\n                <form>\n                    <h3>Token Info</h3>\n                    <div className=\"form-row\"><label>Token Address: {tokenData.tokenAddress}</label></div>\n                    <div className=\"form-row\"><label>Token Name: {tokenData.name}</label></div>\n                    <div className=\"form-row\"><label>Token Symbol: {tokenData.symbol}</label></div>\n                    <div className=\"form-row\"><label>Account Address: {tokenData.accountAddress}</label></div>\n                    <div className=\"form-row\"><label>Token Balance: {formatBalance(tokenData.balance.toString(), tokenData.decimals)} {tokenData.symbol}</label></div>\n                    <h3>Transfer Tokens</h3>\n                    <div className=\"form-row\">\n                        <label>Recipient</label>\n                        <input className=\"text-input\" value={transferRecipient} onChange={(event)=>setTransferRecipient(event.target.value)}/><br/>\n                        <label>Amount</label>\n                        <input type=\"number\" value={transferAmount} onChange={(event)=>setTransferAmount(event.target.value)}/>\n                        <input type=\"button\" value=\"Transfer\"/>\n                    </div>\n                    <h3>Set Token Allowance</h3>\n                    <div className=\"form-row\">\n                        <label>Spender</label>\n                        <input className=\"text-input\" value={allowanceSpender} onChange={(event)=>setAllowanceSpender(event.target.value)}/><br/>\n                        <label>Amount</label>\n                        <input type=\"number\" value={allowanceAmount} onChange={(event)=>setAllowanceAmount(event.target.value)}/>\n                        <input type=\"button\" value=\"Set Allowance\"/>\n                    </div>\n                    <h3>Claim Allowance</h3>\n                    <div className=\"form-row\">\n                        <label>Owner</label>\n                        <input className=\"text-input\" value={claimOwner} onChange={(event)=>setClaimOwner(event.target.value)}/><br/>\n                        <label>Amount</label>\n                        <input type=\"number\" value={claimAmount} onChange={(event)=>setClaimAmount(event.target.value)}/><br/>\n                        <label>Send to another address</label>\n                        <input type=\"checkbox\" checked={sendAllowance} onChange={()=>setSendAllowance(!sendAllowance)}/>\n                        {sendAllowance &&\n                            <div>\n                                <label>Destination address</label>\n                                <input className=\"text-input\" value={sendAddress} onChange={(event)=>setSendAddress(event.target.value)}/>\n                            </div>}\n                        <input type=\"button\" value={sendAllowance ? \"Send Allowance\" : \"Claim Allowance\"}/>\n                    </div>\n                    <div className=\"form-row btn-row\"><Button variant=\"primary\" onClick={() => {\n                        setTokenAddress('');\n                        toggleTokenAddressVerified(false);\n                    }}>Get Token</Button></div>\n                </form>\n                :\n                <form>\n                    <div className=\"form-row\"><label>Token Address</label><input type=\"text\" value={tokenAddress} className=\"text-input\" onChange={(event)=>setTokenAddress(event.target.value)}/></div>\n                    <div className=\"form-row btn-row\"><Button variant=\"primary\" onClick={() => verifyTokenAddress(tokenAddress)}>Get Token</Button></div>\n                </form>\n            }\n        </div>\n    );\n}\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}