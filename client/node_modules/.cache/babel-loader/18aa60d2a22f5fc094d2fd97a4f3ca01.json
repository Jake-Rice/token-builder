{"ast":null,"code":"var _jsxFileName = \"/Users/jake/workspace/token-builder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport BuildForm from './Components/BuildForm.jsx';\nimport { ethers } from 'ethers';\nimport CustomERC20Builder from './artifacts/src/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = '0xa6dC01F2983c1cD4C4BA74342C0B3276302eC99c';\n\nfunction App() {\n  _s();\n\n  useEffect(async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n    console.log(ethers.utils.formetEther(await contract.price()));\n  }, []);\n\n  const build = async (name, symbol, supply, decimals, mintable) => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n    console.log(await contract.price());\n    const owner = await signer.getAddress();\n    console.log(owner, supply, name, symbol, decimals, mintable);\n    await contract.buildERC20(owner, supply, name, symbol, decimals, mintable);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Token Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Build your own ERC20 token on the Ethereum blockchain!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BuildForm, {\n      onSubmit: build\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/App.js"],"names":["logo","BuildForm","ethers","CustomERC20Builder","useEffect","contractAddress","App","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","contract","Contract","abi","console","log","utils","formetEther","price","build","name","symbol","supply","decimals","mintable","owner","getAddress","buildERC20"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,OAAOC,kBAAP,MAA+B,0EAA/B;AACA,SAASC,SAAT,QAA0B,OAA1B;;AACA,MAAMC,eAAe,GAAG,4CAAxB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACbF,EAAAA,SAAS,CAAC,YAAU;AAClB,UAAMG,QAAQ,GAAG,IAAIL,MAAM,CAACM,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CAAjB;AACA,UAAMJ,QAAQ,CAACK,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;AACA,UAAMC,MAAM,GAAGN,QAAQ,CAACO,SAAT,EAAf;AACA,UAAMC,QAAQ,GAAG,IAAIb,MAAM,CAACc,QAAX,CAAoBX,eAApB,EAAqCF,kBAAkB,CAACc,GAAxD,EAA6DJ,MAA7D,CAAjB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAM,CAACkB,KAAP,CAAaC,WAAb,CAAyB,MAAMN,QAAQ,CAACO,KAAT,EAA/B,CAAZ;AACD,GANQ,EAMP,EANO,CAAT;;AAOA,QAAMC,KAAK,GAAG,OAAOC,IAAP,EAAaC,MAAb,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,QAAvC,KAAoD;AAChE,UAAMrB,QAAQ,GAAG,IAAIL,MAAM,CAACM,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CAAjB;AACA,UAAMJ,QAAQ,CAACK,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;AACA,UAAMC,MAAM,GAAGN,QAAQ,CAACO,SAAT,EAAf;AACA,UAAMC,QAAQ,GAAG,IAAIb,MAAM,CAACc,QAAX,CAAoBX,eAApB,EAAqCF,kBAAkB,CAACc,GAAxD,EAA6DJ,MAA7D,CAAjB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAMJ,QAAQ,CAACO,KAAT,EAAlB;AACA,UAAMO,KAAK,GAAG,MAAMhB,MAAM,CAACiB,UAAP,EAApB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ,EAAmBH,MAAnB,EAA2BF,IAA3B,EAAiCC,MAAjC,EAAyCE,QAAzC,EAAmDC,QAAnD;AACA,UAAMb,QAAQ,CAACgB,UAAT,CAAoBF,KAApB,EAA2BH,MAA3B,EAAmCF,IAAnC,EAAyCC,MAAzC,EAAiDE,QAAjD,EAA2DC,QAA3D,CAAN;AACD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEL;AAArB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA1BQjB,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport BuildForm from './Components/BuildForm.jsx';\nimport { ethers } from 'ethers';\n\nimport CustomERC20Builder from './artifacts/src/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nimport { useEffect } from 'react';\nconst contractAddress = '0xa6dC01F2983c1cD4C4BA74342C0B3276302eC99c';\n\nfunction App() {\n  useEffect(async ()=>{\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n    console.log(ethers.utils.formetEther(await contract.price()));\n  },[]);\n  const build = async (name, symbol, supply, decimals, mintable) => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n    console.log(await contract.price());\n    const owner = await signer.getAddress();\n    console.log(owner, supply, name, symbol, decimals, mintable);\n    await contract.buildERC20(owner, supply, name, symbol, decimals, mintable);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Token Builder</h1>\n      <h2>Build your own ERC20 token on the Ethereum blockchain!</h2>\n      <BuildForm onSubmit={build}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}