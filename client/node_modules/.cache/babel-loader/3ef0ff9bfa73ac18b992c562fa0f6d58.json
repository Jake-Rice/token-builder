{"ast":null,"code":"'use strict';\n\nconst {\n  InvalidArgumentError,\n  RequestAbortedError,\n  SocketError\n} = require('../core/errors');\n\nconst {\n  AsyncResource\n} = require('async_hooks');\n\nconst util = require('../core/util');\n\nconst {\n  addSignal,\n  removeSignal\n} = require('./abort-signal');\n\nconst assert = require('assert');\n\nclass UpgradeHandler extends AsyncResource {\n  constructor(opts, callback) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts');\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback');\n    }\n\n    const {\n      signal,\n      opaque,\n      responseHeaders\n    } = opts;\n\n    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget');\n    }\n\n    super('UNDICI_UPGRADE');\n    this.responseHeaders = responseHeaders || null;\n    this.opaque = opaque || null;\n    this.callback = callback;\n    this.abort = null;\n    this.context = null;\n    addSignal(this, signal);\n  }\n\n  onConnect(abort, context) {\n    if (!this.callback) {\n      throw new RequestAbortedError();\n    }\n\n    this.abort = abort;\n    this.context = null;\n  }\n\n  onHeaders() {\n    throw new SocketError('bad upgrade', null);\n  }\n\n  onUpgrade(statusCode, rawHeaders, socket) {\n    const {\n      callback,\n      opaque,\n      context\n    } = this;\n    assert.strictEqual(statusCode, 101);\n    removeSignal(this);\n    this.callback = null;\n    const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders);\n    this.runInAsyncScope(callback, null, null, {\n      headers,\n      socket,\n      opaque,\n      context\n    });\n  }\n\n  onError(err) {\n    const {\n      callback,\n      opaque\n    } = this;\n    removeSignal(this);\n\n    if (callback) {\n      this.callback = null;\n      queueMicrotask(() => {\n        this.runInAsyncScope(callback, null, err, {\n          opaque\n        });\n      });\n    }\n  }\n\n}\n\nfunction upgrade(opts, callback) {\n  if (callback === undefined) {\n    return new Promise((resolve, reject) => {\n      upgrade.call(this, opts, (err, data) => {\n        return err ? reject(err) : resolve(data);\n      });\n    });\n  }\n\n  try {\n    const upgradeHandler = new UpgradeHandler(opts, callback);\n    this.dispatch({ ...opts,\n      method: opts.method || 'GET',\n      upgrade: opts.protocol || 'Websocket'\n    }, upgradeHandler);\n  } catch (err) {\n    if (typeof callback !== 'function') {\n      throw err;\n    }\n\n    const opaque = opts && opts.opaque;\n    queueMicrotask(() => callback(err, {\n      opaque\n    }));\n  }\n}\n\nmodule.exports = upgrade;","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/node_modules/undici/lib/api/api-upgrade.js"],"names":["InvalidArgumentError","RequestAbortedError","SocketError","require","AsyncResource","util","addSignal","removeSignal","assert","UpgradeHandler","constructor","opts","callback","signal","opaque","responseHeaders","on","addEventListener","abort","context","onConnect","onHeaders","onUpgrade","statusCode","rawHeaders","socket","strictEqual","headers","parseRawHeaders","parseHeaders","runInAsyncScope","onError","err","queueMicrotask","upgrade","undefined","Promise","resolve","reject","call","data","upgradeHandler","dispatch","method","protocol","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst { InvalidArgumentError, RequestAbortedError, SocketError } = require('../core/errors')\nconst { AsyncResource } = require('async_hooks')\nconst util = require('../core/util')\nconst { addSignal, removeSignal } = require('./abort-signal')\nconst assert = require('assert')\n\nclass UpgradeHandler extends AsyncResource {\n  constructor (opts, callback) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    const { signal, opaque, responseHeaders } = opts\n\n    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n    }\n\n    super('UNDICI_UPGRADE')\n\n    this.responseHeaders = responseHeaders || null\n    this.opaque = opaque || null\n    this.callback = callback\n    this.abort = null\n    this.context = null\n\n    addSignal(this, signal)\n  }\n\n  onConnect (abort, context) {\n    if (!this.callback) {\n      throw new RequestAbortedError()\n    }\n\n    this.abort = abort\n    this.context = null\n  }\n\n  onHeaders () {\n    throw new SocketError('bad upgrade', null)\n  }\n\n  onUpgrade (statusCode, rawHeaders, socket) {\n    const { callback, opaque, context } = this\n\n    assert.strictEqual(statusCode, 101)\n\n    removeSignal(this)\n\n    this.callback = null\n    const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n    this.runInAsyncScope(callback, null, null, {\n      headers,\n      socket,\n      opaque,\n      context\n    })\n  }\n\n  onError (err) {\n    const { callback, opaque } = this\n\n    removeSignal(this)\n\n    if (callback) {\n      this.callback = null\n      queueMicrotask(() => {\n        this.runInAsyncScope(callback, null, err, { opaque })\n      })\n    }\n  }\n}\n\nfunction upgrade (opts, callback) {\n  if (callback === undefined) {\n    return new Promise((resolve, reject) => {\n      upgrade.call(this, opts, (err, data) => {\n        return err ? reject(err) : resolve(data)\n      })\n    })\n  }\n\n  try {\n    const upgradeHandler = new UpgradeHandler(opts, callback)\n    this.dispatch({\n      ...opts,\n      method: opts.method || 'GET',\n      upgrade: opts.protocol || 'Websocket'\n    }, upgradeHandler)\n  } catch (err) {\n    if (typeof callback !== 'function') {\n      throw err\n    }\n    const opaque = opts && opts.opaque\n    queueMicrotask(() => callback(err, { opaque }))\n  }\n}\n\nmodule.exports = upgrade\n"]},"metadata":{},"sourceType":"script"}