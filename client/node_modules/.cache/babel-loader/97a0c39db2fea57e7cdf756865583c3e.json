{"ast":null,"code":"var _jsxFileName = \"/Users/jake/workspace/token-builder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Routes, Route } from 'react-router-dom';\nimport BuildForm from './Components/BuildForm.jsx';\nimport Dashboard from './Components/Dashboard.jsx';\nimport { ethers } from 'ethers';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport CustomERC20Builder from './artifacts/src/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = '0x96D998E65eBf1BFEdEEDaf59c8D63EC6E06175B9'; //Rinkeby\n\nfunction App() {\n  _s();\n\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [newToken, toggleNewToken] = useState(false);\n  const [tokenDashboard, toggleTokenDashboard] = useState(false);\n  const [inProgress, toggleInProgress] = useState(false);\n\n  const build = async (name, symbol, supply, decimals) => {\n    if (!inProgress) {\n      try {\n        toggleInProgress(true);\n        const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n        const owner = await signer.getAddress();\n        const tx = await contract.buildERC20(owner, supply, name, symbol, decimals, {\n          \"value\": ethers.utils.parseEther(\"0.001\")\n        });\n        const rc = await tx.wait();\n        const event = rc.events.find(event => event.event === 'TokenDeployment');\n        const [own, addr] = event.args;\n        const newTokenAddress = addr;\n        setTokenAddress(newTokenAddress);\n        toggleNewToken(false);\n        toggleTokenDashboard(true);\n      } catch (e) {\n        alert(e);\n        toggleInProgress(false);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Token Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Build your own ERC20 token on the Ethereum (Rinkeby) blockchain!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: !tokenDashboard ? \"primary\" : \"secondary\",\n          onClick: () => {\n            toggleTokenDashboard(false);\n            toggleNewToken(true);\n          },\n          children: \"Create A Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: tokenDashboard ? \"primary\" : \"secondary\",\n          onClick: () => {\n            toggleNewToken(false);\n            toggleTokenDashboard(true);\n          },\n          children: \"Token Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), newToken && /*#__PURE__*/_jsxDEV(BuildForm, {\n        onSubmit: build,\n        inProgress: inProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 22\n      }, this), tokenDashboard && /*#__PURE__*/_jsxDEV(Dashboard, {\n        tokenAddress: tokenAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"H++avRWebw5RldPFI86It0qItxM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/App.js"],"names":["logo","Routes","Route","BuildForm","Dashboard","ethers","useState","Button","Card","CustomERC20Builder","contractAddress","App","tokenAddress","setTokenAddress","newToken","toggleNewToken","tokenDashboard","toggleTokenDashboard","inProgress","toggleInProgress","build","name","symbol","supply","decimals","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","contract","Contract","abi","owner","getAddress","tx","buildERC20","utils","parseEther","rc","wait","event","events","find","own","addr","args","newTokenAddress","e","alert"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Routes, Route } from 'react-router-dom';\nimport BuildForm from './Components/BuildForm.jsx';\nimport Dashboard from './Components/Dashboard.jsx';\nimport { ethers } from 'ethers';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport CustomERC20Builder from './artifacts/src/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nconst contractAddress = '0x96D998E65eBf1BFEdEEDaf59c8D63EC6E06175B9'; //Rinkeby\n\nfunction App() {\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [newToken, toggleNewToken] = useState(false);\n  const [tokenDashboard, toggleTokenDashboard] = useState(false);\n  const [inProgress, toggleInProgress] = useState(false);\n\n  const build = async (name, symbol, supply, decimals) => {\n    if (!inProgress) {\n      try {\n        toggleInProgress(true);\n        const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n        const owner = await signer.getAddress();\n        const tx = await contract.buildERC20(owner, supply, name, symbol, decimals, {\"value\": ethers.utils.parseEther(\"0.001\")});\n        const rc = await tx.wait();\n        const event = rc.events.find(event => event.event === 'TokenDeployment');\n        const [own, addr] = event.args;\n        const newTokenAddress = addr;\n        setTokenAddress(newTokenAddress);\n        toggleNewToken(false);\n        toggleTokenDashboard(true);\n      } catch (e) {\n        alert(e);\n        toggleInProgress(false);\n      }\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Token Builder</h1>\n      <h2>Build your own ERC20 token on the Ethereum (Rinkeby) blockchain!</h2>\n      <Card>\n        <ButtonGroup>\n          <Button variant={!tokenDashboard ? \"primary\" : \"secondary\"} onClick={()=>{\n            toggleTokenDashboard(false);\n            toggleNewToken(true);\n          }}>Create A Token</Button>\n          <Button variant={tokenDashboard ? \"primary\" : \"secondary\"} onClick={()=>{\n            toggleNewToken(false);\n            toggleTokenDashboard(true);\n          }}>Token Dashboard</Button>\n        </ButtonGroup>\n        {newToken && <BuildForm onSubmit={build} inProgress={inProgress}/>}\n        {tokenDashboard && <Dashboard tokenAddress={tokenAddress}/>}\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}