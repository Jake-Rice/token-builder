{"ast":null,"code":"var _jsxFileName = \"/Users/jake/workspace/token-builder/src/Components/TokenEntry.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TokenEntry = () => {\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const startTime = Date.now();\n    await verifyTokenAddress(tokenAddress).then(() => {\n      console.log(\"Ran in \" + (Date.now() - startTime) + \"ms\");\n    });\n  };\n\n  const verifyTokenAddress = async addr => {\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const erc20 = new ethers.Contract(addr, abi, signer);\n    } catch (e) {\n      console.error(e);\n      alert('Error: Token address invalid.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Token Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: tokenAddress,\n        className: \"text-input\",\n        onChange: event => setTokenAddress(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row btn-row\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleSubmit,\n        children: \"Get Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TokenEntry;\nexport default TokenEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenEntry\");","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/Components/TokenEntry.js"],"names":["React","Form","Button","TokenEntry","handleSubmit","event","preventDefault","startTime","Date","now","verifyTokenAddress","tokenAddress","then","console","log","addr","provider","ethers","providers","Web3Provider","window","ethereum","send","signer","getSigner","erc20","Contract","abi","e","error","alert","setTokenAddress","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAlB;AACA,UAAMC,kBAAkB,CAACC,YAAD,CAAlB,CAAiCC,IAAjC,CAAsC,MAAM;AAC9CC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaN,IAAI,CAACC,GAAL,KAAaF,SAA1B,IAAuC,IAAnD;AACH,KAFK,CAAN;AAGH,GAND;;AAQA,QAAMG,kBAAkB,GAAG,MAAOK,IAAP,IAAgB;AACvC,QAAI;AACA,YAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CAAjB;AACA,YAAML,QAAQ,CAACM,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;AACA,YAAMC,MAAM,GAAGP,QAAQ,CAACQ,SAAT,EAAf;AACA,YAAMC,KAAK,GAAG,IAAIR,MAAM,CAACS,QAAX,CAAoBX,IAApB,EAA0BY,GAA1B,EAA+BJ,MAA/B,CAAd;AACH,KALD,CAKE,OAAOK,CAAP,EAAU;AACRf,MAAAA,OAAO,CAACgB,KAAR,CAAcD,CAAd;AACAE,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACH;AACJ,GAVD;;AAYA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAE1B,YAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA1B,eAAsD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEO,YAA1B;AAAwC,QAAA,SAAS,EAAC,YAAlD;AAA+D,QAAA,QAAQ,EAAGN,KAAD,IAAS0B,eAAe,CAAC1B,KAAK,CAAC2B,MAAN,CAAaC,KAAd;AAAjG;AAAA;AAAA;AAAA;AAAA,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BAAkC,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAE7B,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA3BD;;KAAMD,U;AA6BN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nconst TokenEntry = () => {\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const startTime = Date.now();\n        await verifyTokenAddress(tokenAddress).then(() => {\n            console.log(\"Ran in \" + (Date.now() - startTime) + \"ms\");\n        });\n    }\n\n    const verifyTokenAddress = async (addr) => {\n        try {\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            await provider.send(\"eth_requestAccounts\", []);\n            const signer = provider.getSigner();\n            const erc20 = new ethers.Contract(addr, abi, signer);\n        } catch (e) { \n            console.error(e);\n            alert('Error: Token address invalid.');\n        }\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <div className=\"form-row\"><label>Token Address</label><input type=\"text\" value={tokenAddress} className=\"text-input\" onChange={(event)=>setTokenAddress(event.target.value)}/></div>\n            <div className=\"form-row btn-row\"><Button variant=\"primary\" onClick={handleSubmit}>Get Token</Button></div>\n        </Form>\n    )\n}\n\nexport default TokenEntry;"]},"metadata":{},"sourceType":"module"}