{"ast":null,"code":"import _slicedToArray from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import Card from'react-bootstrap/Card';import Form from'react-bootstrap/Form';import Button from'react-bootstrap/Button';import'./buildForm.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BuildForm=function BuildForm(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),symbol=_useState4[0],setSymbol=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),supply=_useState6[0],setSupply=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),decimals=_useState8[0],setDecimals=_useState8[1];var submit=function submit(){props.onSubmit(name,symbol,parseAmount(supply,decimals),decimals);};var parseAmount=function parseAmount(amt,dec){var amount=amt;if(amount.indexOf('.')<0){for(var i=0;i<dec;i++){amount=amount+'0';}return amount;}while(amount.length-amount.indexOf('.')<=dec){amount=amount+'0';}if(amount.length-amount.indexOf('.')>dec+1)amount=amount.slice(0,amount.indexOf('.')+dec);return amount.slice(0,amount.indexOf('.'))+amount.slice(amount.indexOf('.')+1);};return/*#__PURE__*/_jsx(Card,{className:\"card card-app\",children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Create A Token\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"text-input\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Symbol\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"text-input\",value:symbol,onChange:function onChange(e){return setSymbol(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Initial Supply\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"text-input\",value:supply,onChange:function onChange(e){return setSupply(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"# of Decimal Places\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"text-input\",value:decimals,onChange:function onChange(e){return setDecimals(e.target.value);}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row btn-row\",children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:function onClick(){return submit();},children:\"Create Token\"})}),props.inProgress&&/*#__PURE__*/_jsx(\"div\",{children:\"Please Wait: Token Creation In Progress...\"})]})});};export default BuildForm;","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/Components/BuildForm.jsx"],"names":["React","useState","Card","Form","Button","BuildForm","props","name","setName","symbol","setSymbol","supply","setSupply","decimals","setDecimals","submit","onSubmit","parseAmount","amt","dec","amount","indexOf","i","length","slice","e","target","value","inProgress"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './buildForm.css';\n\nconst BuildForm = (props) => {\n  const [name, setName] = useState('');\n  const [symbol, setSymbol] = useState('');\n  const [supply, setSupply] = useState('');\n  const [decimals, setDecimals] = useState('');\n  \n  const submit = () => {\n    props.onSubmit(name, symbol, parseAmount(supply, decimals), decimals);\n  }\n\n  const parseAmount = (amt, dec) => {\n    let amount = amt;\n    if (amount.indexOf('.') < 0) {\n        for (let i=0; i<dec; i++) {\n            amount=amount+'0';\n        }\n        return amount;\n    }\n    while (amount.length-amount.indexOf('.') <= dec) amount=amount+'0';\n    if (amount.length-amount.indexOf('.') > dec+1) amount = amount.slice(0,amount.indexOf('.')+dec);\n    return amount.slice(0,amount.indexOf('.'))+amount.slice(amount.indexOf('.')+1);\n  }\n\n  return (\n    <Card className=\"card card-app\">\n      <Form>\n        <h3>Create A Token</h3>\n        <div className=\"form-row\"><label>Name</label><input type=\"text\" className=\"text-input\" value={name} onChange={(e)=>setName(e.target.value)}/></div>\n        <div className=\"form-row\"><label>Symbol</label><input type=\"text\" className=\"text-input\" value={symbol} onChange={(e)=>setSymbol(e.target.value)}/></div>\n        <div className=\"form-row\"><label>Initial Supply</label><input type=\"number\" className=\"text-input\" value={supply} onChange={(e)=>setSupply(e.target.value)}/></div>\n        <div className=\"form-row\"><label># of Decimal Places</label><input type=\"number\" className=\"text-input\" value={decimals} onChange={(e)=>setDecimals(e.target.value)}/></div>\n        <div className=\"form-row btn-row\"><Button variant=\"primary\" onClick={() => submit()}>Create Token</Button></div>\n        {props.inProgress && <div>Please Wait: Token Creation In Progress...</div>}\n      </Form>\n    </Card>\n  )\n}\n\nexport default BuildForm;"]},"metadata":{},"sourceType":"module"}