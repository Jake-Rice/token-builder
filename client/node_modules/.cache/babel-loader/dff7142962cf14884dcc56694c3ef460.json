{"ast":null,"code":"var _jsxFileName = \"/Users/jake/workspace/token-builder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport BuildForm from './Components/BuildForm.jsx';\nimport ConnectButton from './Components/ConnectButton.jsx';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport CustomERC20Builder from '../artifacts/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = '';\n\nfunction App() {\n  _s();\n\n  const [web3Connected, setWeb3Connected] = useState(false);\n  const [provider, setProvider] = useState();\n  const [signer, setSigner] = useState();\n  const [contract, setContract] = useState();\n\n  const connect = async () => {\n    setProvider(new ethers.providers.Web3Provider(window.ethereum, \"any\"));\n    await provider.send(\"eth_requestAccounts\", []);\n    setSigner(provider.getSigner());\n    setContract(new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer));\n    setWeb3Connected(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Token Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Build your own ERC20 token on the Ethereum blockchain!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), web3Connected ? /*#__PURE__*/_jsxDEV(BuildForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(ConnectButton, {\n      onConnect: connect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+Pt04yucXo+D5Tl57cT4SPKjtT4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/App.js"],"names":["logo","BuildForm","ConnectButton","useState","ethers","CustomERC20Builder","contractAddress","App","web3Connected","setWeb3Connected","provider","setProvider","signer","setSigner","contract","setContract","connect","providers","Web3Provider","window","ethereum","send","getSigner","Contract","abi"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,OAAOC,kBAAP,MAA+B,uEAA/B;;AACA,MAAMC,eAAe,GAAG,EAAxB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,EAAxC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,EAAxC;;AAEA,QAAMa,OAAO,GAAG,YAAY;AAC1BL,IAAAA,WAAW,CAAC,IAAIP,MAAM,CAACa,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CAAD,CAAX;AACA,UAAMV,QAAQ,CAACW,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;AACAR,IAAAA,SAAS,CAACH,QAAQ,CAACY,SAAT,EAAD,CAAT;AACAP,IAAAA,WAAW,CAAC,IAAIX,MAAM,CAACmB,QAAX,CAAoBjB,eAApB,EAAqCD,kBAAkB,CAACmB,GAAxD,EAA6DZ,MAA7D,CAAD,CAAX;AACAH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGD,aAAa,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAkB,QAAC,aAAD;AAAe,MAAA,SAAS,EAAEQ;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHlC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArBQT,G;;KAAAA,G;AAuBT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport BuildForm from './Components/BuildForm.jsx';\nimport ConnectButton from './Components/ConnectButton.jsx'\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\n\nimport CustomERC20Builder from '../artifacts/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nconst contractAddress = '';\n\nfunction App() {\n  const [web3Connected, setWeb3Connected] = useState(false);\n  const [provider, setProvider] = useState();\n  const [signer, setSigner] = useState();\n  const [contract, setContract] = useState();\n  \n  const connect = async () => {\n    setProvider(new ethers.providers.Web3Provider(window.ethereum, \"any\"));\n    await provider.send(\"eth_requestAccounts\", []);\n    setSigner(provider.getSigner());\n    setContract(new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer));\n    setWeb3Connected(true);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Token Builder</h1>\n      <h2>Build your own ERC20 token on the Ethereum blockchain!</h2>\n      {web3Connected ? <BuildForm/> : <ConnectButton onConnect={connect}/>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}