{"ast":null,"code":"import _asyncToGenerator from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from'react';import{ethers}from'ethers';import Card from'react-bootstrap/Card';import TokenEntry from'./TokenEntry';import Dashboard from'./Dashboard';import abi from'./abi';import{jsx as _jsx}from\"react/jsx-runtime\";var DashboardCard=function DashboardCard(props){var _useState=useState({accountAddress:'',balance:'',name:'',symbol:'',decimals:''}),_useState2=_slicedToArray(_useState,2),tokenData=_useState2[0],setTokenData=_useState2[1];var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(addr){var erc20,pUser,pName,pSymbol,pDecimals,_yield$Promise$all,_yield$Promise$all2,user,name,symbol,decimals,balance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;erc20=new ethers.Contract(addr,abi,props.web3.signer);props.updateContract(erc20);pUser=props.web3.signer.getAddress();pName=erc20.name();pSymbol=erc20.symbol();pDecimals=erc20.decimals();_context.next=9;return Promise.all([pUser,pName,pSymbol,pDecimals]);case 9:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,4);user=_yield$Promise$all2[0];name=_yield$Promise$all2[1];symbol=_yield$Promise$all2[2];decimals=_yield$Promise$all2[3];_context.next=17;return erc20.balanceOf(user);case 17:balance=_context.sent;setTokenData({accountAddress:user,balance:balance.toString(),name:name,symbol:symbol,decimals:decimals});props.setTokenAddress(addr);_context.next=26;break;case 22:_context.prev=22;_context.t0=_context[\"catch\"](0);console.error(_context.t0);alert('Error: Token address invalid.');case 26:case\"end\":return _context.stop();}}},_callee,null,[[0,22]]);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();var updateTokenData=function updateTokenData(data){setTokenData(data);};return/*#__PURE__*/_jsx(Card,{children:props.tokenAddress===''?/*#__PURE__*/_jsx(TokenEntry,{submit:handleSubmit}):/*#__PURE__*/_jsx(Dashboard,{web3:props.web3,tokenAddress:props.tokenAddress,tokenData:tokenData,updateTokenData:updateTokenData,reset:props.reset})});};export default DashboardCard;","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/Components/DashboardCard.js"],"names":["React","useState","useEffect","ethers","Card","TokenEntry","Dashboard","abi","DashboardCard","props","accountAddress","balance","name","symbol","decimals","tokenData","setTokenData","handleSubmit","addr","erc20","Contract","web3","signer","updateContract","pUser","getAddress","pName","pSymbol","pDecimals","Promise","all","user","balanceOf","toString","setTokenAddress","console","error","alert","updateTokenData","data","tokenAddress","reset"],"mappings":"8WAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,C,2CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC7B,cAAkCR,QAAQ,CAAC,CACvCS,cAAc,CAAE,EADuB,CAEvCC,OAAO,CAAE,EAF8B,CAGvCC,IAAI,CAAE,EAHiC,CAIvCC,MAAM,CAAE,EAJ+B,CAKvCC,QAAQ,CAAE,EAL6B,CAAD,CAA1C,wCAAOC,SAAP,eAAkBC,YAAlB,eAQA,GAAMC,CAAAA,YAAY,0FAAG,iBAAOC,IAAP,mPAEPC,KAFO,CAEC,GAAIhB,CAAAA,MAAM,CAACiB,QAAX,CAAoBF,IAApB,CAA0BX,GAA1B,CAA+BE,KAAK,CAACY,IAAN,CAAWC,MAA1C,CAFD,CAGbb,KAAK,CAACc,cAAN,CAAqBJ,KAArB,EACMK,KAJO,CAICf,KAAK,CAACY,IAAN,CAAWC,MAAX,CAAkBG,UAAlB,EAJD,CAKPC,KALO,CAKCP,KAAK,CAACP,IAAN,EALD,CAMPe,OANO,CAMGR,KAAK,CAACN,MAAN,EANH,CAOPe,SAPO,CAOKT,KAAK,CAACL,QAAN,EAPL,uBAQgCe,CAAAA,OAAO,CAACC,GAAR,CAAY,CAACN,KAAD,CAAQE,KAAR,CAAeC,OAAf,CAAwBC,SAAxB,CAAZ,CARhC,kGAQNG,IARM,wBAQAnB,IARA,wBAQMC,MARN,wBAQcC,QARd,+CASSK,CAAAA,KAAK,CAACa,SAAN,CAAgBD,IAAhB,CATT,SASPpB,OATO,eAUbK,YAAY,CAAC,CACTN,cAAc,CAAEqB,IADP,CAETpB,OAAO,CAAEA,OAAO,CAACsB,QAAR,EAFA,CAGTrB,IAAI,CAAEA,IAHG,CAITC,MAAM,CAAEA,MAJC,CAKTC,QAAQ,CAAEA,QALD,CAAD,CAAZ,CAOAL,KAAK,CAACyB,eAAN,CAAsBhB,IAAtB,EAjBa,iFAmBbiB,OAAO,CAACC,KAAR,cACAC,KAAK,CAAC,+BAAD,CAAL,CApBa,qEAAH,kBAAZpB,CAAAA,YAAY,4CAAlB,CAwBA,GAAMqB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,CAAU,CAC9BvB,YAAY,CAACuB,IAAD,CAAZ,CACH,CAFD,CAIA,mBACI,KAAC,IAAD,WACM9B,KAAK,CAAC+B,YAAN,GAAqB,EAAtB,cAA4B,KAAC,UAAD,EAAY,MAAM,CAAEvB,YAApB,EAA5B,cAAkE,KAAC,SAAD,EAAW,IAAI,CAAER,KAAK,CAACY,IAAvB,CAA6B,YAAY,CAAEZ,KAAK,CAAC+B,YAAjD,CAA+D,SAAS,CAAEzB,SAA1E,CAAqF,eAAe,CAAEuB,eAAtG,CAAuH,KAAK,CAAE7B,KAAK,CAACgC,KAApI,EADvE,EADJ,CAKH,CA1CD,CA4CA,cAAejC,CAAAA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { ethers } from 'ethers';\nimport Card from 'react-bootstrap/Card';\nimport TokenEntry from './TokenEntry';\nimport Dashboard from './Dashboard'\nimport abi from './abi'\n\nconst DashboardCard = (props) => {\n    const [tokenData, setTokenData] = useState({\n        accountAddress: '',\n        balance: '',\n        name: '',\n        symbol: '',\n        decimals: ''\n    });\n\n    const handleSubmit = async (addr) => {\n        try {\n            const erc20 = new ethers.Contract(addr, abi, props.web3.signer)\n            props.updateContract(erc20);\n            const pUser = props.web3.signer.getAddress();\n            const pName = erc20.name();\n            const pSymbol = erc20.symbol();\n            const pDecimals = erc20.decimals();\n            const [user, name, symbol, decimals] = await Promise.all([pUser, pName, pSymbol, pDecimals]);\n            const balance = await erc20.balanceOf(user);\n            setTokenData({\n                accountAddress: user,\n                balance: balance.toString(),\n                name: name,\n                symbol: symbol,\n                decimals: decimals\n            });\n            props.setTokenAddress(addr);\n        } catch (e) { \n            console.error(e);\n            alert('Error: Token address invalid.');\n        }\n    }\n\n    const updateTokenData = (data) => {\n        setTokenData(data);\n    }\n\n    return (\n        <Card>\n            {(props.tokenAddress==='') ? <TokenEntry submit={handleSubmit}/> : <Dashboard web3={props.web3} tokenAddress={props.tokenAddress} tokenData={tokenData} updateTokenData={updateTokenData} reset={props.reset}/>}\n        </Card>\n    )\n}\n\nexport default DashboardCard"]},"metadata":{},"sourceType":"module"}