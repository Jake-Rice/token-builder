{"ast":null,"code":"import _objectSpread from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/regenerator/index.js\";import logo from'./logo.svg';import'bootstrap/dist/css/bootstrap.min.css';import'./App.css';import{Routes,Route,Link,useNavigate}from'react-router-dom';import BuildForm from'./Components/BuildForm.jsx';import DashboardCard from'./Components/DashboardCard';import{ethers}from'ethers';import{useEffect,useState}from'react';import Button from'react-bootstrap/Button';import abi from'./Components/abi';import CustomERC20Builder from'./artifacts/src/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var contractAddress='0x96D998E65eBf1BFEdEEDaf59c8D63EC6E06175B9';//Rinkeby\nfunction App(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),web3=_useState2[0],setWeb3=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),tokenAddress=_useState4[0],setTokenAddress=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),inProgress=_useState6[0],toggleInProgress=_useState6[1];useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider,signer,contract;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:provider=new ethers.providers.Web3Provider(window.ethereum,\"any\");_context.next=3;return provider.send(\"eth_requestAccounts\",[]);case 3:signer=provider.getSigner();contract=new ethers.Contract(contractAddress,CustomERC20Builder.abi,signer);setWeb3({provider:provider,signer:signer,contract:contract});case 6:case\"end\":return _context.stop();}}},_callee);})),[]);var build=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name,symbol,supply,decimals){var contract,owner,tx,rc,event,_event$args,own,addr,newContract;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(inProgress){_context2.next=26;break;}_context2.prev=1;contract=new ethers.Contract(contractAddress,CustomERC20Builder.abi,web3.signer);_context2.next=5;return web3.signer.getAddress();case 5:owner=_context2.sent;_context2.next=8;return contract.buildERC20(owner,supply,name,symbol,decimals,{\"value\":ethers.utils.parseEther(\"0.001\")});case 8:tx=_context2.sent;toggleInProgress(true);_context2.next=12;return tx.wait();case 12:rc=_context2.sent;event=rc.events.find(function(event){return event.event==='TokenDeployment';});_event$args=_slicedToArray(event.args,2),own=_event$args[0],addr=_event$args[1];newContract=new ethers.Contract(addr,abi,web3.signer);setWeb3(_objectSpread(_objectSpread({},web3),{},{contract:newContract}));setTokenAddress(addr);toggleInProgress(false);navigate(\"/token-builder/dashboard\");_context2.next=26;break;case 22:_context2.prev=22;_context2.t0=_context2[\"catch\"](1);alert(\"Error: token not created\\n\"+_context2.t0.message);toggleInProgress(false);case 26:case\"end\":return _context2.stop();}}},_callee2,null,[[1,22]]);}));return function build(_x,_x2,_x3,_x4){return _ref2.apply(this,arguments);};}();var navigate=useNavigate();var handleReset=function handleReset(){setTokenAddress('');};var handleUpdateContract=function handleUpdateContract(contract){setWeb3(_objectSpread(_objectSpread({},web3),{},{contract:contract}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Token Builder\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Build your own ERC20 token on the Ethereum (Rinkeby) blockchain!\"}),/*#__PURE__*/_jsx(Link,{to:\"/token-builder/build\",children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",children:\"Create A Token\"})}),/*#__PURE__*/_jsx(Link,{to:\"/token-builder/dashboard\",children:/*#__PURE__*/_jsx(Button,{variant:\"secondary\",children:\"Token Dashboard\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-container\",children:[/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(_Fragment,{})}),/*#__PURE__*/_jsx(Route,{path:\"/token-builder/\",element:/*#__PURE__*/_jsx(_Fragment,{})}),/*#__PURE__*/_jsx(Route,{path:\"/token-builder/build\",element:/*#__PURE__*/_jsx(BuildForm,{onSubmit:build,inProgress:inProgress})}),/*#__PURE__*/_jsx(Route,{path:\"/token-builder/dashboard\",element:web3.signer?/*#__PURE__*/_jsx(DashboardCard,{web3:web3,tokenAddress:tokenAddress,setTokenAddress:setTokenAddress,updateContract:handleUpdateContract,reset:handleReset}):/*#__PURE__*/_jsx(_Fragment,{})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"instructions-container card card-info\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"instructions-section-header\",children:\"Creating A Token\"}),/*#__PURE__*/_jsxs(\"ol\",{className:\"instructions-list\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"Make sure you have Metamask installed on your browser.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Set Metamask to the Rinkeby Ethereum Test Network.\"}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Get some test ETH from a faucet like \",/*#__PURE__*/_jsx(\"a\",{href:\"http://faucets.chain.link/rinkeby\",target:\"_blank\",children:\"Chainlink\"})]}),/*#__PURE__*/_jsx(\"li\",{children:\"Connect your Metamask account to this website.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Click the \\\"Create A Token\\\" button.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Enter the Name, Symbol and Initial Supply of your token.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Enter the number of decimal places your token can be divided into.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Click the \\\"Create Token\\\" button at the bottom of the form.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Approve the transaction in Metamask to pay the fee and gas for token deployment.\"})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"instructions-section-header\",children:\"Using The Token Dashboard\"}),/*#__PURE__*/_jsxs(\"ol\",{className:\"instructions-list\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"Make sure you have Metamask installed on your browser.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Click the \\\"Token Dashboard\\\" button above.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Enter the contract address for the ERC20 token you want to use.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Click the \\\"Get Token\\\" button.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"If the address points to a valid ERC20 token, the token details will appear.\"})]}),/*#__PURE__*/_jsx(\"h4\",{className:\"instructions-function-header\",children:\"Transfer Tokens\"}),/*#__PURE__*/_jsxs(\"ol\",{className:\"instructions-list\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"Enter Recipient (the address you are sending your tokens to).\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Enter Amount (the number of tokens you are sending to the Recipient).\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Click the \\\"Transfer\\\" button.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Approve the transaction in Metamask and pay the necessary gas.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Your balance shown in the dashboard will update once the transaction is added to the blockchain.\"})]}),/*#__PURE__*/_jsx(\"h4\",{className:\"instructions-function-header\",children:\"Set Token Allowance\"}),/*#__PURE__*/_jsxs(\"ol\",{className:\"instructions-list\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"This function allows another address to spend your tokens (or transfer the tokens to their own address).\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Enter Spender (the address you are authorizing to spend your tokens).\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Enter Amount (the number of tokens you are authorizing the Spender to spend).\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Click the \\\"Set Allowance\\\" button.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Approve the transaction in Metamask and pay the necessary gas.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Once the transaction is added to the blockchain, the Spender address will have access to the approved Amount of your tokens.\"})]}),/*#__PURE__*/_jsx(\"h4\",{className:\"instructions-function-header\",children:\"Claim Allowance\"}),/*#__PURE__*/_jsxs(\"ol\",{className:\"instructions-list\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"This function transfers tokens to your account from an address that has approved an allowance to you.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Enter Owner (the address you are claiming tokens from).\"}),/*#__PURE__*/_jsx(\"li\",{children:\"If the address is valid, the allowance the Owner has approved for your address will be shown.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Enter Amount (the number of tokens you are claiming).\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Click the \\\"Claim Allowance\\\" button.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Approve the transaction in Metamask and pay the necessary gas.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Once the transaction is added to the blockchain, the tokens will be in your account, and the allowance from the Owner will be reduced\"})]})]})]})]});}export default App;","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/App.js"],"names":["logo","Routes","Route","Link","useNavigate","BuildForm","DashboardCard","ethers","useEffect","useState","Button","abi","CustomERC20Builder","contractAddress","App","web3","setWeb3","tokenAddress","setTokenAddress","inProgress","toggleInProgress","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","contract","Contract","build","name","symbol","supply","decimals","getAddress","owner","buildERC20","utils","parseEther","tx","wait","rc","event","events","find","args","own","addr","newContract","navigate","alert","message","handleReset","handleUpdateContract"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport BuildForm from './Components/BuildForm.jsx';\nimport DashboardCard from './Components/DashboardCard'\nimport { ethers } from 'ethers';\nimport { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport abi from './Components/abi';\n\nimport CustomERC20Builder from './artifacts/src/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nconst contractAddress = '0x96D998E65eBf1BFEdEEDaf59c8D63EC6E06175B9'; //Rinkeby\n\nfunction App() {\n  const [web3, setWeb3] = useState({\n  });\n\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [inProgress, toggleInProgress] = useState(false);\n\n  useEffect(async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n    setWeb3({\n      provider: provider,\n      signer: signer,\n      contract: contract\n    });\n  }, []);\n\n  const build = async (name, symbol, supply, decimals) => {\n    if (!inProgress) {\n      try {\n        const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, web3.signer);\n        const owner = await web3.signer.getAddress();\n        const tx = await contract.buildERC20(owner, supply, name, symbol, decimals, {\"value\": ethers.utils.parseEther(\"0.001\")});\n        toggleInProgress(true);\n        const rc = await tx.wait();\n        const event = rc.events.find(event => event.event === 'TokenDeployment');\n        const [own, addr] = event.args;\n        const newContract = new ethers.Contract(addr, abi, web3.signer);\n        setWeb3({...web3, contract: newContract});\n        setTokenAddress(addr);\n        toggleInProgress(false);\n        navigate(\"/token-builder/dashboard\");\n      } catch (e) {\n        alert(\"Error: token not created\\n\"+ e.message);\n        toggleInProgress(false);\n      }\n    }\n  }\n\n  const navigate = useNavigate();\n\n  const handleReset = () => {\n    setTokenAddress('');\n  }\n\n  const handleUpdateContract = (contract) => {\n    setWeb3({...web3, contract: contract});\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Token Builder</h1>\n      <h2>Build your own ERC20 token on the Ethereum (Rinkeby) blockchain!</h2>\n      <Link to=\"/token-builder/build\"><Button variant=\"primary\">Create A Token</Button></Link>\n      <Link to=\"/token-builder/dashboard\"><Button variant=\"secondary\">Token Dashboard</Button></Link>\n      <div className=\"card-container\">\n        <Routes>\n          <Route path=\"/\" element={<></>}/>\n          <Route path=\"/token-builder/\" element={<></>}/>\n          <Route path=\"/token-builder/build\" element={<BuildForm onSubmit={build} inProgress={inProgress}/>}/>\n          <Route path=\"/token-builder/dashboard\" element={web3.signer ? <DashboardCard web3={web3} tokenAddress={tokenAddress} setTokenAddress={setTokenAddress} updateContract={handleUpdateContract} reset={handleReset}/> : <></>}/>\n        </Routes>\n        <div className=\"instructions-container card card-info\">\n          <h3 className=\"instructions-section-header\">Creating A Token</h3>\n          <ol className=\"instructions-list\">\n            <li>Make sure you have Metamask installed on your browser.</li>\n            <li>Set Metamask to the Rinkeby Ethereum Test Network.</li>\n            <li>Get some test ETH from a faucet like <a href=\"http://faucets.chain.link/rinkeby\" target=\"_blank\">Chainlink</a></li>\n            <li>Connect your Metamask account to this website.</li>\n            <li>Click the \"Create A Token\" button.</li>\n            <li>Enter the Name, Symbol and Initial Supply of your token.</li>\n            <li>Enter the number of decimal places your token can be divided into.</li>\n            <li>Click the \"Create Token\" button at the bottom of the form.</li>\n            <li>Approve the transaction in Metamask to pay the fee and gas for token deployment.</li>\n          </ol>\n          <h3 className=\"instructions-section-header\">Using The Token Dashboard</h3>\n          <ol className=\"instructions-list\">\n            <li>Make sure you have Metamask installed on your browser.</li>\n            <li>Click the \"Token Dashboard\" button above.</li>\n            <li>Enter the contract address for the ERC20 token you want to use.</li>\n            <li>Click the \"Get Token\" button.</li>\n            <li>If the address points to a valid ERC20 token, the token details will appear.</li>\n          </ol>\n          <h4 className=\"instructions-function-header\">Transfer Tokens</h4>\n          <ol className=\"instructions-list\">\n            <li>Enter Recipient (the address you are sending your tokens to).</li>\n            <li>Enter Amount (the number of tokens you are sending to the Recipient).</li>\n            <li>Click the \"Transfer\" button.</li>\n            <li>Approve the transaction in Metamask and pay the necessary gas.</li>\n            <li>Your balance shown in the dashboard will update once the transaction is added to the blockchain.</li>\n          </ol>\n          <h4 className=\"instructions-function-header\">Set Token Allowance</h4>\n          <ol className=\"instructions-list\">\n            <li>This function allows another address to spend your tokens (or transfer the tokens to their own address).</li>\n            <li>Enter Spender (the address you are authorizing to spend your tokens).</li>\n            <li>Enter Amount (the number of tokens you are authorizing the Spender to spend).</li>\n            <li>Click the \"Set Allowance\" button.</li>\n            <li>Approve the transaction in Metamask and pay the necessary gas.</li>\n            <li>Once the transaction is added to the blockchain, the Spender address will have access to the approved Amount of your tokens.</li>\n          </ol>\n          <h4 className=\"instructions-function-header\">Claim Allowance</h4>\n          <ol className=\"instructions-list\">\n            <li>This function transfers tokens to your account from an address that has approved an allowance to you.</li>\n            <li>Enter Owner (the address you are claiming tokens from).</li>\n            <li>If the address is valid, the allowance the Owner has approved for your address will be shown.</li>\n            <li>Enter Amount (the number of tokens you are claiming).</li>\n            <li>Click the \"Claim Allowance\" button.</li>\n            <li>Approve the transaction in Metamask and pay the necessary gas.</li>\n            <li>Once the transaction is added to the blockchain, the tokens will be in your account, and the allowance from the Owner will be reduced</li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}