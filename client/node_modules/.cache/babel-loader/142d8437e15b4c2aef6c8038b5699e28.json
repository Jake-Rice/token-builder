{"ast":null,"code":"var _jsxFileName = \"/Users/jake/workspace/token-builder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport BuildForm from './Components/BuildForm.jsx'; //import { ethers } from 'ethers';\n\nconst {\n  ethers\n} = require(\"hardhat\");\n\nimport { useEffect } from 'react';\nimport CustomERC20Builder from './artifacts/src/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\n\nfunction App() {\n  _s();\n\n  useEffect(async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    await provider.send(\"eth_requestAccounts\", []);\n    const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, provider);\n    provider.on(\"block\", () => console.log(\"new block\"));\n    contract.on('TokenDeployment', () => {\n      console.log(\"event fired!\");\n    });\n  });\n\n  const build = async (name, symbol, supply, decimals, mintable) => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n    const owner = await signer.getAddress();\n    await contract.buildERC20(owner, supply, name, symbol, decimals, mintable, {\n      \"value\": ethers.utils.parseEther(\"0.001\")\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Token Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Build your own ERC20 token on the Ethereum blockchain!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BuildForm, {\n      onSubmit: build\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/App.js"],"names":["logo","BuildForm","ethers","require","useEffect","CustomERC20Builder","contractAddress","App","provider","providers","Web3Provider","window","ethereum","send","contract","Contract","abi","on","console","log","build","name","symbol","supply","decimals","mintable","signer","getSigner","owner","getAddress","buildERC20","utils","parseEther"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,4BAAtB,C,CACA;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaC,OAAO,CAAC,SAAD,CAA1B;;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAOC,kBAAP,MAA+B,0EAA/B;;AACA,MAAMC,eAAe,GAAG,4CAAxB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACbH,EAAAA,SAAS,CAAC,YAAU;AAClB,UAAMI,QAAQ,GAAG,IAAIN,MAAM,CAACO,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CAAjB;AACA,UAAMJ,QAAQ,CAACK,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;AACA,UAAMC,QAAQ,GAAG,IAAIZ,MAAM,CAACa,QAAX,CAAoBT,eAApB,EAAqCD,kBAAkB,CAACW,GAAxD,EAA6DR,QAA7D,CAAjB;AACAA,IAAAA,QAAQ,CAACS,EAAT,CAAY,OAAZ,EAAqB,MAAMC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAA3B;AACAL,IAAAA,QAAQ,CAACG,EAAT,CAAY,iBAAZ,EAA+B,MAAM;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAFD;AAGD,GARQ,CAAT;;AASA,QAAMC,KAAK,GAAG,OAAOC,IAAP,EAAaC,MAAb,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,QAAvC,KAAoD;AAChE,UAAMjB,QAAQ,GAAG,IAAIN,MAAM,CAACO,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CAAjB;AACA,UAAMJ,QAAQ,CAACK,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;AACA,UAAMa,MAAM,GAAGlB,QAAQ,CAACmB,SAAT,EAAf;AACA,UAAMb,QAAQ,GAAG,IAAIZ,MAAM,CAACa,QAAX,CAAoBT,eAApB,EAAqCD,kBAAkB,CAACW,GAAxD,EAA6DU,MAA7D,CAAjB;AACA,UAAME,KAAK,GAAG,MAAMF,MAAM,CAACG,UAAP,EAApB;AACA,UAAMf,QAAQ,CAACgB,UAAT,CAAoBF,KAApB,EAA2BL,MAA3B,EAAmCF,IAAnC,EAAyCC,MAAzC,EAAiDE,QAAjD,EAA2DC,QAA3D,EAAqE;AAAC,eAASvB,MAAM,CAAC6B,KAAP,CAAaC,UAAb,CAAwB,OAAxB;AAAV,KAArE,CAAN;AACD,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEZ;AAArB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA1BQb,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport BuildForm from './Components/BuildForm.jsx';\n//import { ethers } from 'ethers';\n\nconst { ethers } = require(\"hardhat\");\nimport { useEffect } from 'react';\n\nimport CustomERC20Builder from './artifacts/src/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nconst contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\n\nfunction App() {\n  useEffect(async ()=>{\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    await provider.send(\"eth_requestAccounts\", []);\n    const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, provider);\n    provider.on(\"block\", () => console.log(\"new block\"));\n    contract.on('TokenDeployment', () => {\n      console.log(\"event fired!\");\n    });\n  });\n  const build = async (name, symbol, supply, decimals, mintable) => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n    const owner = await signer.getAddress();\n    await contract.buildERC20(owner, supply, name, symbol, decimals, mintable, {\"value\": ethers.utils.parseEther(\"0.001\")});\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Token Builder</h1>\n      <h2>Build your own ERC20 token on the Ethereum blockchain!</h2>\n      <BuildForm onSubmit={build}/>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}