{"ast":null,"code":"var _jsxFileName = \"/Users/jake/workspace/token-builder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport BuildForm from './Components/BuildForm.jsx';\nimport DashboardCard from './Components/DashboardCard';\nimport { ethers } from 'ethers';\nimport { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport abi from './Components/abi';\nimport CustomERC20Builder from './artifacts/src/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst contractAddress = '0x96D998E65eBf1BFEdEEDaf59c8D63EC6E06175B9'; //Rinkeby\n\nconst provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n\nfunction App() {\n  _s();\n\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [tokenData, setTokenData] = useState({\n    accountAddress: '',\n    balance: '',\n    name: '',\n    symbol: '',\n    decimals: ''\n  });\n  const [inProgress, toggleInProgress] = useState(false);\n\n  const build = async (name, symbol, supply, decimals) => {\n    if (!inProgress) {\n      try {\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n        const owner = await signer.getAddress();\n        const tx = await contract.buildERC20(owner, supply, name, symbol, decimals, {\n          \"value\": ethers.utils.parseEther(\"0.001\")\n        });\n        toggleInProgress(true);\n        const rc = await tx.wait();\n        const event = rc.events.find(event => event.event === 'TokenDeployment');\n        const [own, addr] = event.args;\n        const newTokenAddress = addr;\n        setTokenAddress(newTokenAddress);\n        toggleInProgress(false);\n        navigate(\"/token-builder/dashboard\");\n      } catch (e) {\n        alert(\"Error: token not created\\n\" + e.message);\n        toggleInProgress(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    provider.provider.on(\"accountsChanged\", async () => {\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const erc20 = new ethers.Contract(tokenAddress, abi, signer);\n      const user = await signer.getAddress();\n      const balance = await erc20.balanceOf(user);\n      console.log(JSON.stringify({ ...tokenData\n      }));\n      setTokenData({ ...tokenData,\n        accountAddress: user,\n        balance: balance.toString()\n      });\n      console.log(JSON.stringify(tokenData));\n    });\n  }, []);\n  const navigate = useNavigate();\n\n  const handleReset = () => {\n    setTokenAddress('');\n  };\n\n  const updateTokenAddress = addr => {\n    setTokenAddress(addr);\n  };\n\n  const updateTokenData = data => {\n    setTokenData(data);\n    console.log(JSON.stringify(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Token Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Build your own ERC20 token on the Ethereum (Rinkeby) blockchain!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/token-builder/build\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        children: \"Create A Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/token-builder/dashboard\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        children: \"Token Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/token-builder/\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/token-builder/build\",\n        element: /*#__PURE__*/_jsxDEV(BuildForm, {\n          onSubmit: build,\n          inProgress: inProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/token-builder/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(DashboardCard, {\n          provider: provider,\n          tokenAddress: tokenAddress,\n          setTokenAddress: updateTokenAddress,\n          tokenData: tokenData,\n          setTokenData: updateTokenData,\n          reset: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bol8xK9FqrEowAfYEJLZ9gdQF2w=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/App.js"],"names":["logo","Routes","Route","Link","useNavigate","BuildForm","DashboardCard","ethers","useEffect","useState","Button","abi","CustomERC20Builder","contractAddress","provider","providers","Web3Provider","window","ethereum","App","tokenAddress","setTokenAddress","tokenData","setTokenData","accountAddress","balance","name","symbol","decimals","inProgress","toggleInProgress","build","supply","send","signer","getSigner","contract","Contract","owner","getAddress","tx","buildERC20","utils","parseEther","rc","wait","event","events","find","own","addr","args","newTokenAddress","navigate","e","alert","message","on","erc20","user","balanceOf","console","log","JSON","stringify","toString","handleReset","updateTokenAddress","updateTokenData","data"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport BuildForm from './Components/BuildForm.jsx';\nimport DashboardCard from './Components/DashboardCard'\nimport { ethers } from 'ethers';\nimport { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport abi from './Components/abi'\n\nimport CustomERC20Builder from './artifacts/src/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nconst contractAddress = '0x96D998E65eBf1BFEdEEDaf59c8D63EC6E06175B9'; //Rinkeby\nconst provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n\nfunction App() {\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [tokenData, setTokenData] = useState({\n    accountAddress: '',\n    balance: '',\n    name: '',\n    symbol: '',\n    decimals: ''\n  });\n  const [inProgress, toggleInProgress] = useState(false);\n\n  const build = async (name, symbol, supply, decimals) => {\n    if (!inProgress) {\n      try {\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n        const owner = await signer.getAddress();\n        const tx = await contract.buildERC20(owner, supply, name, symbol, decimals, {\"value\": ethers.utils.parseEther(\"0.001\")});\n        toggleInProgress(true);\n        const rc = await tx.wait();\n        const event = rc.events.find(event => event.event === 'TokenDeployment');\n        const [own, addr] = event.args;\n        const newTokenAddress = addr;\n        setTokenAddress(newTokenAddress);\n        toggleInProgress(false);\n        navigate(\"/token-builder/dashboard\");\n      } catch (e) {\n        alert(\"Error: token not created\\n\"+ e.message);\n        toggleInProgress(false);\n      }\n    }\n  }\n\n  useEffect(() => {\n    provider.provider.on(\"accountsChanged\", async () => {\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const erc20 = new ethers.Contract(tokenAddress, abi, signer);\n        const user = await signer.getAddress();\n        const balance = await erc20.balanceOf(user);\n        console.log(JSON.stringify({...tokenData}))\n        setTokenData({\n            ...tokenData,\n            accountAddress: user,\n            balance: balance.toString()\n        });\n        console.log(JSON.stringify(tokenData));\n    });\n}, [])\n\n  const navigate = useNavigate();\n\n  const handleReset = () => {\n    setTokenAddress('');\n  }\n\n  const updateTokenAddress = (addr) => {\n    setTokenAddress(addr);\n  }\n  const updateTokenData = (data) => {\n    setTokenData(data);\n    console.log(JSON.stringify(data))\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Token Builder</h1>\n      <h2>Build your own ERC20 token on the Ethereum (Rinkeby) blockchain!</h2>\n      <Link to=\"/token-builder/build\"><Button variant=\"primary\">Create A Token</Button></Link>\n      <Link to=\"/token-builder/dashboard\"><Button variant=\"secondary\">Token Dashboard</Button></Link>\n      <Routes>\n        <Route path=\"/\" element={<></>}/>\n        <Route path=\"/token-builder/\" element={<></>}/>\n        <Route path=\"/token-builder/build\" element={<BuildForm onSubmit={build} inProgress={inProgress}/>}/>\n        <Route path=\"/token-builder/dashboard\" element={<DashboardCard provider={provider} tokenAddress={tokenAddress} setTokenAddress={updateTokenAddress} tokenData={tokenData} setTokenData={updateTokenData} reset={handleReset}/>}/>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}