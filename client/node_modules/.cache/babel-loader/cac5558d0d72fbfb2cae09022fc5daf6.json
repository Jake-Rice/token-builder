{"ast":null,"code":"var _jsxFileName = \"/Users/jake/workspace/token-builder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport BuildForm from './Components/BuildForm.jsx';\nimport ConnectButton from './Components/ConnectButton.jsx';\nimport { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport CustomERC20Builder from './artifacts/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = '';\n\nfunction App() {\n  _s();\n\n  const [connected, setConnected] = useState(window.ethereum.isConnected());\n\n  const connect = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    console.log(await provider.send(\"eth_requestAccounts\", []));\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n  };\n\n  useEffect(() => {\n    window.ethereum.on('connect', () => {\n      setConnected(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Token Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Build your own ERC20 token on the Ethereum blockchain!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), window.ethereum.isConnected() ? /*#__PURE__*/_jsxDEV(BuildForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(ConnectButton, {\n      onConnect: connect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 55\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YcG5xiTPLlJZRQQqHS7dClif72k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/App.js"],"names":["logo","BuildForm","ConnectButton","useState","useEffect","ethers","CustomERC20Builder","contractAddress","App","connected","setConnected","window","ethereum","isConnected","connect","provider","providers","Web3Provider","console","log","send","signer","getSigner","contract","Contract","abi","on"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,OAAOC,kBAAP,MAA+B,sEAA/B;;AACA,MAAMC,eAAe,GAAG,EAAxB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAACQ,MAAM,CAACC,QAAP,CAAgBC,WAAhB,EAAD,CAA1C;;AAGA,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAMC,QAAQ,GAAG,IAAIV,MAAM,CAACW,SAAP,CAAiBC,YAArB,CAAkCN,MAAM,CAACC,QAAzC,EAAmD,KAAnD,CAAjB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAMJ,QAAQ,CAACK,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAlB;AACA,UAAMC,MAAM,GAAGN,QAAQ,CAACO,SAAT,EAAf;AACA,UAAMC,QAAQ,GAAG,IAAIlB,MAAM,CAACmB,QAAX,CAAoBjB,eAApB,EAAqCD,kBAAkB,CAACmB,GAAxD,EAA6DJ,MAA7D,CAAjB;AACD,GALD;;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,MAAM,CAACC,QAAP,CAAgBc,EAAhB,CAAmB,SAAnB,EAA8B,MAAM;AAClChB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGC,MAAM,CAACC,QAAP,CAAgBC,WAAhB,kBAAgC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAhC,gBAA+C,QAAC,aAAD;AAAe,MAAA,SAAS,EAAEC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHlD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAxBQN,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport BuildForm from './Components/BuildForm.jsx';\nimport ConnectButton from './Components/ConnectButton.jsx'\nimport { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\n\nimport CustomERC20Builder from './artifacts/contracts/CustomERC20Builder.sol/CustomERC20Builder.json';\nconst contractAddress = '';\n\nfunction App() {\n  const [connected, setConnected] = useState(window.ethereum.isConnected());\n\n  \n  const connect = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n    console.log(await provider.send(\"eth_requestAccounts\", []));\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, CustomERC20Builder.abi, signer);\n  }\n\n  useEffect(() => {\n    window.ethereum.on('connect', () => {\n      setConnected(true);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Token Builder</h1>\n      <h2>Build your own ERC20 token on the Ethereum blockchain!</h2>\n      {window.ethereum.isConnected() ? <BuildForm/> : <ConnectButton onConnect={connect}/>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}