{"ast":null,"code":"import _slicedToArray from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/jake/workspace/token-builder/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from'react';import{ethers}from'ethers';import Card from'react-bootstrap/Card';import TokenEntry from'./TokenEntry';import Dashboard from'./Dashboard';import abi from'./abi';import{jsx as _jsx}from\"react/jsx-runtime\";var DashboardCard=function DashboardCard(props){useEffect(function(){if(props.tokenAddress!==''){handleSubmit(props.tokenAddress);}},[]);var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(addr){var provider,signer,erc20,pUser,pName,pSymbol,pDecimals,_yield$Promise$all,_yield$Promise$all2,user,name,symbol,decimals,balance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;provider=new ethers.providers.Web3Provider(window.ethereum,\"any\");_context.next=4;return provider.send(\"eth_requestAccounts\",[]);case 4:signer=provider.getSigner();erc20=new ethers.Contract(addr,abi,signer);pUser=signer.getAddress();pName=erc20.name();pSymbol=erc20.symbol();pDecimals=erc20.decimals();_context.next=12;return Promise.all([pUser,pName,pSymbol,pDecimals]);case 12:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,4);user=_yield$Promise$all2[0];name=_yield$Promise$all2[1];symbol=_yield$Promise$all2[2];decimals=_yield$Promise$all2[3];_context.next=20;return erc20.balanceOf(user);case 20:balance=_context.sent;props.setTokenAddress(addr);props.setTokenData({accountAddress:user,balance:balance.toString(),name:name,symbol:symbol,decimals:decimals});_context.next=29;break;case 25:_context.prev=25;_context.t0=_context[\"catch\"](0);console.error(_context.t0);alert('Error: Token address invalid.');case 29:case\"end\":return _context.stop();}}},_callee,null,[[0,25]]);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Card,{children:props.tokenAddress===''?/*#__PURE__*/_jsx(TokenEntry,{submit:handleSubmit}):/*#__PURE__*/_jsx(Dashboard,{tokenAddress:props.tokenAddress,tokenData:props.tokenData,setTokenData:props.setTokenData,reset:props.reset})});};export default DashboardCard;","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/Components/DashboardCard.js"],"names":["React","useState","useEffect","ethers","Card","TokenEntry","Dashboard","abi","DashboardCard","props","tokenAddress","handleSubmit","addr","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","erc20","Contract","pUser","getAddress","pName","name","pSymbol","symbol","pDecimals","decimals","Promise","all","user","balanceOf","balance","setTokenAddress","setTokenData","accountAddress","toString","console","error","alert","tokenData","reset"],"mappings":"8WAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,C,2CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAE7BP,SAAS,CAAC,UAAM,CACZ,GAAIO,KAAK,CAACC,YAAN,GAAqB,EAAzB,CAA6B,CACzBC,YAAY,CAACF,KAAK,CAACC,YAAP,CAAZ,CACH,CACJ,CAJQ,CAIN,EAJM,CAAT,CAMA,GAAMC,CAAAA,YAAY,0FAAG,iBAAOC,IAAP,mQAEPC,QAFO,CAEI,GAAIV,CAAAA,MAAM,CAACW,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAmD,KAAnD,CAFJ,uBAGPJ,CAAAA,QAAQ,CAACK,IAAT,CAAc,qBAAd,CAAqC,EAArC,CAHO,QAIPC,MAJO,CAIEN,QAAQ,CAACO,SAAT,EAJF,CAKPC,KALO,CAKC,GAAIlB,CAAAA,MAAM,CAACmB,QAAX,CAAoBV,IAApB,CAA0BL,GAA1B,CAA+BY,MAA/B,CALD,CAOPI,KAPO,CAOCJ,MAAM,CAACK,UAAP,EAPD,CAQPC,KARO,CAQCJ,KAAK,CAACK,IAAN,EARD,CASPC,OATO,CASGN,KAAK,CAACO,MAAN,EATH,CAUPC,SAVO,CAUKR,KAAK,CAACS,QAAN,EAVL,wBAWgCC,CAAAA,OAAO,CAACC,GAAR,CAAY,CAACT,KAAD,CAAQE,KAAR,CAAeE,OAAf,CAAwBE,SAAxB,CAAZ,CAXhC,mGAWNI,IAXM,wBAWAP,IAXA,wBAWME,MAXN,wBAWcE,QAXd,+CAYST,CAAAA,KAAK,CAACa,SAAN,CAAgBD,IAAhB,CAZT,SAYPE,OAZO,eAab1B,KAAK,CAAC2B,eAAN,CAAsBxB,IAAtB,EACAH,KAAK,CAAC4B,YAAN,CAAmB,CACfC,cAAc,CAAEL,IADD,CAEfE,OAAO,CAAEA,OAAO,CAACI,QAAR,EAFM,CAGfb,IAAI,CAAEA,IAHS,CAIfE,MAAM,CAAEA,MAJO,CAKfE,QAAQ,CAAEA,QALK,CAAnB,EAda,iFAsBbU,OAAO,CAACC,KAAR,cACAC,KAAK,CAAC,+BAAD,CAAL,CAvBa,qEAAH,kBAAZ/B,CAAAA,YAAY,4CAAlB,CA2BA,mBACI,KAAC,IAAD,WACMF,KAAK,CAACC,YAAN,GAAqB,EAAtB,cAA4B,KAAC,UAAD,EAAY,MAAM,CAAEC,YAApB,EAA5B,cAAkE,KAAC,SAAD,EAAW,YAAY,CAAEF,KAAK,CAACC,YAA/B,CAA6C,SAAS,CAAED,KAAK,CAACkC,SAA9D,CAAyE,YAAY,CAAElC,KAAK,CAAC4B,YAA7F,CAA2G,KAAK,CAAE5B,KAAK,CAACmC,KAAxH,EADvE,EADJ,CAKH,CAxCD,CA0CA,cAAepC,CAAAA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { ethers } from 'ethers';\nimport Card from 'react-bootstrap/Card';\nimport TokenEntry from './TokenEntry';\nimport Dashboard from './Dashboard'\nimport abi from './abi'\n\nconst DashboardCard = (props) => {\n\n    useEffect(() => {\n        if (props.tokenAddress!=='') {\n            handleSubmit(props.tokenAddress);\n        }\n    }, []);\n\n    const handleSubmit = async (addr) => {\n        try {\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            await provider.send(\"eth_requestAccounts\", []);\n            const signer = provider.getSigner();\n            const erc20 = new ethers.Contract(addr, abi, signer);\n\n            const pUser = signer.getAddress();\n            const pName = erc20.name();\n            const pSymbol = erc20.symbol();\n            const pDecimals = erc20.decimals();\n            const [user, name, symbol, decimals] = await Promise.all([pUser, pName, pSymbol, pDecimals]);\n            const balance = await erc20.balanceOf(user);\n            props.setTokenAddress(addr);\n            props.setTokenData({\n                accountAddress: user,\n                balance: balance.toString(),\n                name: name,\n                symbol: symbol,\n                decimals: decimals\n            });\n        } catch (e) { \n            console.error(e);\n            alert('Error: Token address invalid.');\n        }\n    }\n\n    return (\n        <Card>\n            {(props.tokenAddress==='') ? <TokenEntry submit={handleSubmit}/> : <Dashboard tokenAddress={props.tokenAddress} tokenData={props.tokenData} setTokenData={props.setTokenData} reset={props.reset}/>}\n        </Card>\n    )\n}\n\nexport default DashboardCard"]},"metadata":{},"sourceType":"module"}