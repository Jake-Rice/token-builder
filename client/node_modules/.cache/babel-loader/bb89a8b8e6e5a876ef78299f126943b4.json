{"ast":null,"code":"var _jsxFileName = \"/Users/jake/workspace/token-builder/src/Components/BuildForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './buildForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BuildForm = props => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [symbol, setSymbol] = useState('');\n  const [supply, setSupply] = useState('');\n  const [decimals, setDecimals] = useState('');\n  const [inProgress, toggleInProgress] = useState(false);\n\n  const submit = () => {\n    if (!inProgress) {\n      toggleInProgress(true);\n      props.onSubmit(name, symbol, parseAmount(supply, decimals), decimals);\n    }\n  };\n\n  const parseAmount = (amt, dec) => {\n    let amount = amt;\n\n    if (amount.indexOf('.') < 0) {\n      for (let i = 0; i < dec; i++) {\n        amount = amount + '0';\n      }\n\n      return amount;\n    }\n\n    while (amount.length - amount.indexOf('.') <= dec) amount = amount + '0';\n\n    if (amount.length - amount.indexOf('.') > dec + 1) amount = amount.slice(0, amount.indexOf('.') + dec);\n    return amount.slice(0, amount.indexOf('.')) + amount.slice(amount.indexOf('.') + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"text-input\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 54\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Symbol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"text-input\",\n        value: symbol,\n        onChange: e => setSymbol(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 56\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Initial Supply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"text-input\",\n        value: supply,\n        onChange: e => setSupply(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"# of Decimal Places\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"text-input\",\n        value: decimals,\n        onChange: e => setDecimals(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 69\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row btn-row\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => submit(),\n        children: \"Create Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please Wait: Token Creation In Progress...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BuildForm, \"N/uWZ0iha0B9jCky91n8ChGnO5M=\");\n\n_c = BuildForm;\nexport default BuildForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuildForm\");","map":{"version":3,"sources":["/Users/jake/workspace/token-builder/src/Components/BuildForm.jsx"],"names":["React","useState","Form","Button","BuildForm","props","name","setName","symbol","setSymbol","supply","setSupply","decimals","setDecimals","inProgress","toggleInProgress","submit","onSubmit","parseAmount","amt","dec","amount","indexOf","i","length","slice","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './buildForm.css';\n\nconst BuildForm = (props) => {\n  const [name, setName] = useState('');\n  const [symbol, setSymbol] = useState('');\n  const [supply, setSupply] = useState('');\n  const [decimals, setDecimals] = useState('');\n  const [inProgress, toggleInProgress] = useState(false);\n\n  const submit = () => {\n    if (!inProgress) {\n      toggleInProgress(true);\n      props.onSubmit(name, symbol, parseAmount(supply, decimals), decimals);\n    }\n  }\n\n  const parseAmount = (amt, dec) => {\n    let amount = amt;\n    if (amount.indexOf('.') < 0) {\n        for (let i=0; i<dec; i++) {\n            amount=amount+'0';\n        }\n        return amount;\n    }\n    while (amount.length-amount.indexOf('.') <= dec) amount=amount+'0';\n    if (amount.length-amount.indexOf('.') > dec+1) amount = amount.slice(0,amount.indexOf('.')+dec);\n    return amount.slice(0,amount.indexOf('.'))+amount.slice(amount.indexOf('.')+1);\n  }\n\n  return (\n    <Form>\n        <div className=\"form-row\"><label>Name</label><input type=\"text\" className=\"text-input\" value={name} onChange={(e)=>setName(e.target.value)}/></div>\n        <div className=\"form-row\"><label>Symbol</label><input type=\"text\" className=\"text-input\" value={symbol} onChange={(e)=>setSymbol(e.target.value)}/></div>\n        <div className=\"form-row\"><label>Initial Supply</label><input type=\"number\" className=\"text-input\" value={supply} onChange={(e)=>setSupply(e.target.value)}/></div>\n        <div className=\"form-row\"><label># of Decimal Places</label><input type=\"number\" className=\"text-input\" value={decimals} onChange={(e)=>setDecimals(e.target.value)}/></div>\n        <div className=\"form-row btn-row\"><Button variant=\"primary\" onClick={() => submit()}>Create Token</Button></div>\n        <div>Please Wait: Token Creation In Progress...</div>\n    </Form>\n  )\n}\n\nexport default BuildForm;"]},"metadata":{},"sourceType":"module"}